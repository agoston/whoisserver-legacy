## ***************************************
##  $Revision: 1.1 $

##  success_test_data

##  Status: NOT REVIEWED, NOT TESTED

##  Author(s):       Denis Walker

##  ******************/ /******************
##  Modification History:

##  ******************/ /******************
##  Copyright (c) 2001                              RIPE NCC

##  All Rights Reserved

##  Permission to use, copy, modify, and distribute this software and its
##  documentation for any purpose and without fee is hereby granted,
##  provided that the above copyright notice appear in all copies and that
##  both that copyright notice and this permission notice appear in
##  supporting documentation, and that the name of the author not be
##  used in advertising or publicity pertaining to distribution of the
##  software without specific, written prior permission.

##  THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
##  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS; IN NO EVENT SHALL
##  AUTHOR BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
##  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
##  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
##  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
## ***************************************


## ***************************************
## Description

## Test data for dbupdate which is expected to be successful.

## I have preceeded comments lines with two # symbols at the start of the line.
## These could be removed if required by a test program. But it would do no harm
## to pass them into dbupdate. In dbupdate they will be ignored, in a similar
## manner to the mail headers, as they would not be recognised as looking like
## an object.

## I have used two $ symbols as an end of record line marker. So starting from
## the beginning of the data file, an update message is everything upto the next
## line starting with $$. This allows updates to consist of one or more objects.

## Most of the objects do not have mail headers. These are not necessary for
## dbupdate. Without them, ack messages are still generated and
## written to the log file, but they are not sent anywhere as emails.
## Notif messages are unaffected.

## I have assumed that the testing could start with an empty database and have
## created objects in a sequence that should be self consistant.

## No consideration has been given to authorisation/authentication issues.
## ***************************************


## objects with all mandatory attributes only

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      DW6465-RIPE
changed:      denis@ripe.net 20010717
source:       RIPE

$$

role:         RIPE DBM
address:      Singel 258
e-mail:       ripe-dbm@ripe.net
admin-c:      DW6465-RIPE
tech-c:       DW6465-RIPE
nic-hdl:      RD132-RIPE
changed:      ripe-dbm@ripe.net 20010810
source:       RIPE

$$


mntner:       RIPE-DBM-MNT
descr:        Mntner for RIPE DBM objects.
admin-c:      DW6465-RIPE
upd-to:       ripe-dbm@ripe.net
auth:         NONE
mnt-by:       RIPE-DBM-MNT
referral-by:  RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010717
source:       RIPE
override:     password

$$


as-block:     AS20480 - AS21503
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE
override:     password

$$


as-set:       AS-UUNETGR
descr:        macro for routing domain UUNETGR
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
source:       RIPE

$$


aut-num:      AS21323
as-name:      RIBA-AS
descr:        Rijecka banka - member of the Bayerische Landesbank Group
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE

$$


domain:       redhorse.sk
descr:        RED HORSE s.r.o.
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
zone-c:       DW6465-RIPE
changed:      hostmaster@sk-nic.sk 20011031
source:       RIPE

$$


filter-set:   fltr-caladan-block
descr:        Routes we don't import/export
filter:       { 127.0.0.0/8^+ }
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      chris@caladan.net 20011022
source:       RIPE

$$


inet6num:     2001:06A8::/35
netname:      BE-BELNET-20001101
descr:        BELNET
country:      BE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20001101
source:       RIPE

$$


inetnum:      194.152.32.0 - 194.152.63.255
netname:      DE-JIPPII-951117
descr:        was de.ipf
country:      DE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
status:       ALLOCATED PA
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20010518
source:       RIPE

$$


inet-rtr:     core1uk.ip.eu-X.com
descr:        Cisco 7507, TFM40, Telehouse, London, UK
local-as:     AS21323
ifaddr:       194.152.44.0 masklen 32
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      jules@eu-X.com 20011020
source:       RIPE

$$


key-cert:     PGPKEY-B995AB52
certif:       -----BEGIN PGP PUBLIC KEY BLOCK-----
certif:       Version: PGP 6.5.8
certif:       
certif:       mQGiBDveuHERBADbIE9AVCnW/fIR8JbiEoThl3TkO0GKah94fLaivYajj5udDi8M
certif:       R8RyHiiUADD71qZEEUXRhBaBZ8yHa3bcQEKWFs7zX1zV+aQ3QDWH5oKUjPgMXoLQ
certif:       B7DCHKJ9U9mG/ujFkXeG+NSohgwgXVooD3taf31kG4fnOgoW/mDipEUpNQCg/9B1
certif:       0FHuw7Dl5yeq/9FLj34W+C8EAJ7l9RM+e0XnuhlkTUg1hZPTBpGkFJzmanU/C9jY
certif:       na2zmT/ClwSyfCCxMwbUHiKEzKOlcprDezZoGHtTbonDBUl3DChd5i6+WCnQSeOJ
certif:       Z+vm5wegJPh8UvKSmTNH6X52D4RmVYvmtq6Y5Ju999hVZP8oGumeQs23krMg9DV5
certif:       prMiBACEDY78jy9HwMgD6dNSJyII2uzECm2A0aIxxv0xNUUuyJraeGW/mm67yPDr
certif:       tPcp3G3Q77ff91yuoTIpJLzO5uT3ex0oUeyVN6HQVemuOuKt4yIQQs7E9Po9xfOn
certif:       YU5n9JMvin1dLcddUtNIRwxhN50L+K0Ma5cy75dOPDyEWr1+LLQiSm9uYXRoYW4g
certif:       SGFtbW9uZCA8cmlwZUBza3kubmV0LnVrPokATgQQEQIADgUCO964cQQLAwECAhkB
certif:       AAoJEGxEm065latSvEAAoP+YNZy+CC8xTaQMNnpOEi9e1ljJAKCwGu6wUHsq0fUR
certif:       hHFmuJ07geCjzrkBDQQ73rxwEAQA6kMRMdUKU8FKqC1G21gM8mHFQNvSx3wUq+A9
certif:       ICdZNj9FEAbd08KE51Q8IFBuTYUtYntuuX1m33IyKE5JG9cYzHVRj3P2UUfQsp7J
certif:       YyWuDeAkOTz6oWUn6G2imBLchThxE5l9ksfcVPxO7G82DWLc403Eg3ruZq3wl5B8
certif:       hmqSU5kAAgIEAJr4sowD9lT0G17cfFaeD7vKqyOXqbSAdN8v0H4RxeRdg0Ej5vgx
certif:       RNy77+tk8BkzRPEVgZnuQu8wKL69GvCQ0/7lncB//9LNMz68pPvtk83RK41goNlo
certif:       E4egoHhbuzgV466kZFAimDB69OD7cjK9uUgPT+7sj6UpB3xUEjsC5K8siQBGBBgR
certif:       AgAGBQI73rxwAAoJEGxEm065latSv8MAnRL+PnfmGBLFFWfkU0WmYPTDSBOrAJ9r
certif:       aX33CUA04I8epPVrSaWQbAbVgw==
certif:       =isph
certif:       -----END PGP PUBLIC KEY BLOCK-----
mnt-by:       RIPE-DBM-MNT
changed:      ripe@sky.net.uk 20011030
source:       RIPE

$$


limerick:     LIM-OUR-SQL
text:         Our SQL
admin-c:      DW6465-RIPE
author:       DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      limerick-wg@ripe.net 19991206
source:       RIPE

$$


peering-set:  prng-KAPPA
descr:        DNT peering with KAPPA
peering:      AS21323 at 194.152.44.0
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


route:        62.212.79.0/29
descr:        LEASEWEB-INX-CRR
origin:       AS21323
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$


route-set:    RS-UUNETNL
descr:        community for routing domain UUNETNL
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


rtr-set:      rtrs-mways-callback
descr:        mediaWays GmbH
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


## ------------------------------------------------------------------------

## maintainer with CRYPT-PW

mntner:       CRYPT-PW-MNT
descr:        Mntner for RIPE DBM objects.
admin-c:      DW6465-RIPE
upd-to:       ripe-dbm@ripe.net
auth:         ataVrvZl8EoTo     #aardvark
mnt-by:       CRYPT-PW-MNT
referral-by:  RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010717
source:       RIPE
override:     password

$$

mntner:       CRYPT-PW-MNT
descr:        Mntner for RIPE DBM objects with password.
admin-c:      DW6465-RIPE
upd-to:       ripe-dbm@ripe.net
auth:         ataVrvZl8EoTo     #aardvark
mnt-by:       CRYPT-PW-MNT
referral-by:  RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010719
source:       RIPE
password:     aardvark

$$

## ------------------------------------------------------------------------

## now for each object, add each optional attribute for that object.

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$


role:         RIPE DBM
address:      Singel 258
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       ripe-dbm@ripe.net
trouble:      contact the admin-c
admin-c:      DW6465-RIPE
tech-c:       DW6465-RIPE
nic-hdl:      RD132-RIPE
remarks:      line of free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010810
source:       RIPE

$$


mntner:       RIPE-DBM-MNT
descr:        Mntner for RIPE DBM objects.
admin-c:      DW6465-RIPE
tech-c:       DW6465-RIPE
upd-to:       ripe-dbm@ripe.net
mnt-nfy:      ripe-dbm@ripe.net
auth:         NONE
remarks:      free free free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
referral-by:  RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010717
source:       RIPE
override:     password

$$


as-block:     AS20480 - AS21503
descr:        RIPE NCC ASN block
remarks:      These AS numbers are further assigned by RIPE NCC
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-lower:    RIPE-DBM-MNT
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE
override:     password

$$


as-set:       AS-UUNETGR
descr:        macro for routing domain UUNETGR
members:      AS21323
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
source:       RIPE

$$


person:       Engin Gunduz
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       engin@ripe.net
nic-hdl:      EG9999-RIPE
remarks:      free text
notify:       engin@ripe.net
changed:      engin@ripe.net 20010717
source:       RIPE

$$

aut-num:      AS12751
as-name:      INTEGRA-NCI
descr:        NCI GmbH - a Integra-Europe Company
admin-c:      DW6465-RIPE
tech-c:       DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      frank.feistel@integra-europe.de 20010607
source:       RIPE

aut-num:      AS21323
as-name:      RIBA-AS
descr:        Rijecka banka - member of the Bayerische Landesbank Group
member-of:    AS-UUNETGR
import:       from AS12751
              action pref=100;
              accept ANY
export:       to AS12751 announce AS21323
default:      to AS12751
              action pref=1;
              networks ANY
remarks:      more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
cross-mnt:    RIPE-DBM-MNT
cross-nfy:    EG9999-RIPE
notify:       denis@ripe.net
mnt-lower:    RIPE-DBM-MNT
mnt-routes:   RIPE-DBM-MNT
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE

$$


domain:       redhorse.sk
descr:        RED HORSE s.r.o.
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
zone-c:       DW6465-RIPE
nserver:      ns.nextra.sk
sub-dom:      www
dom-net:      194.152.53.255
remarks:      ico 35784326
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
mnt-lower:    RIPE-DBM-MNT
refer:        InterNIC rs.internic.net
changed:      hostmaster@sk-nic.sk 20011031
source:       RIPE

$$


filter-set    fltr-caladan-block
descr:        Routes we don't import/export
filter:       { 127.0.0.0/8^+ }
remarks:      even more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      chris@caladan.net 20011022
source:       RIPE

$$


inet6num:     2001:06A8::/35
netname:      BE-BELNET-20001101
descr:        BELNET
country:      BE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
rev-srv:      irc.rdns.de
remarks:      even more free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
mnt-lower:    RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20001101
source:       RIPE

$$


inetnum:      194.152.32.0 - 194.152.63.255
netname:      DE-JIPPII-951117
descr:        was de.ipf
country:      DE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
rev-srv:      irc.rdns.de
status:       ALLOCATED PA
remarks:      even more free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
mnt-lower:    RIPE-DBM-MNT
mnt-routes:   RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20010518
source:       RIPE

$$


inet-rtr:     core1uk.ip.eu-X.com
descr:        Cisco 7507, TFM40, Telehouse, London, UK
alias:        cisco1.ffm.vianw.net
local-as:     AS21323
ifaddr:       194.152.44.0 masklen 32
peer:         BGP4 194.152.32.1 asno(AS21303)
member-of:    AS-UUNETGR
remarks:      yet even more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      jules@eu-X.com 20011020
source:       RIPE

$$


key-cert:     PGPKEY-B995AB52
certif:       -----BEGIN PGP PUBLIC KEY BLOCK-----
certif:       Version: PGP 6.5.8
certif:       
certif:       mQGiBDveuHERBADbIE9AVCnW/fIR8JbiEoThl3TkO0GKah94fLaivYajj5udDi8M
certif:       R8RyHiiUADD71qZEEUXRhBaBZ8yHa3bcQEKWFs7zX1zV+aQ3QDWH5oKUjPgMXoLQ
certif:       B7DCHKJ9U9mG/ujFkXeG+NSohgwgXVooD3taf31kG4fnOgoW/mDipEUpNQCg/9B1
certif:       0FHuw7Dl5yeq/9FLj34W+C8EAJ7l9RM+e0XnuhlkTUg1hZPTBpGkFJzmanU/C9jY
certif:       na2zmT/ClwSyfCCxMwbUHiKEzKOlcprDezZoGHtTbonDBUl3DChd5i6+WCnQSeOJ
certif:       Z+vm5wegJPh8UvKSmTNH6X52D4RmVYvmtq6Y5Ju999hVZP8oGumeQs23krMg9DV5
certif:       prMiBACEDY78jy9HwMgD6dNSJyII2uzECm2A0aIxxv0xNUUuyJraeGW/mm67yPDr
certif:       tPcp3G3Q77ff91yuoTIpJLzO5uT3ex0oUeyVN6HQVemuOuKt4yIQQs7E9Po9xfOn
certif:       YU5n9JMvin1dLcddUtNIRwxhN50L+K0Ma5cy75dOPDyEWr1+LLQiSm9uYXRoYW4g
certif:       SGFtbW9uZCA8cmlwZUBza3kubmV0LnVrPokATgQQEQIADgUCO964cQQLAwECAhkB
certif:       AAoJEGxEm065latSvEAAoP+YNZy+CC8xTaQMNnpOEi9e1ljJAKCwGu6wUHsq0fUR
certif:       hHFmuJ07geCjzrkBDQQ73rxwEAQA6kMRMdUKU8FKqC1G21gM8mHFQNvSx3wUq+A9
certif:       ICdZNj9FEAbd08KE51Q8IFBuTYUtYntuuX1m33IyKE5JG9cYzHVRj3P2UUfQsp7J
certif:       YyWuDeAkOTz6oWUn6G2imBLchThxE5l9ksfcVPxO7G82DWLc403Eg3ruZq3wl5B8
certif:       hmqSU5kAAgIEAJr4sowD9lT0G17cfFaeD7vKqyOXqbSAdN8v0H4RxeRdg0Ej5vgx
certif:       RNy77+tk8BkzRPEVgZnuQu8wKL69GvCQ0/7lncB//9LNMz68pPvtk83RK41goNlo
certif:       E4egoHhbuzgV466kZFAimDB69OD7cjK9uUgPT+7sj6UpB3xUEjsC5K8siQBGBBgR
certif:       AgAGBQI73rxwAAoJEGxEm065latSv8MAnRL+PnfmGBLFFWfkU0WmYPTDSBOrAJ9r
certif:       aX33CUA04I8epPVrSaWQbAbVgw==
certif:       =isph
certif:       -----END PGP PUBLIC KEY BLOCK-----
remarks:      yet even more free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      ripe@sky.net.uk 20011030
source:       RIPE

$$


limerick:     LIM-OUR-SQL
desc:         this is a limerick
text:         Our SQL
admin-c:      DW6465-RIPE
author:       DW6465-RIPE
remarks:      yet even more free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      limerick-wg@ripe.net 19991206
source:       RIPE

$$


peering-set:  prng-KAPPA
descr:        DNT peering with KAPPA
peering:      AS21323 at 194.152.44.0
remarks:      yet even more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


route:        62.212.79.0/29
descr:        LEASEWEB-INX-CRR
origin:       AS21323
holes:        194.152.32.0/32
remarks:      holes temporarily reannounced elsewhere
member-of:    AS-UUNETGR
cross-mnt:    RIPE-DBM-MNT
cross-nfy:    DW6465-RIPE
notify:       denis@ripe.net
mnt-lower:    RIPE-DBM-MNT
mnt-routes:   RIPE-DBM-MNT
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

aut-num:      AS1
as-name:      AGGR1-AS
descr:        aggregation autnum
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE

aut-num:      AS2
as-name:      AGGR2-AS
descr:        aggregation autnum
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE

$$


route:        128.8.0.0/15
descr:        aggregation
origin:       AS1
components:   <^AS2>
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

route:        128.8.0.0/15
descr:        aggregation
origin:       AS1
components:   protocol BGP4 {128.8.0.0/16^+}
              protocol OSPF {128.9.0.0/16^+}
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

route:  	  128.8.0.0/15			
descr:        aggregation
origin: 	  AS1 					
components:   {128.8.0.0/15^-}		
aggr-bndry:   AS1 OR AS2  			
aggr-mtd:	  outbound AS-ANY 		
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

route:  	  128.8.0.0/15
descr:        aggregation
origin: 	  AS2
components:   {128.8.0.0/15^-}
aggr-bndry:   AS1 OR AS2
aggr-mtd:	  outbound AS-ANY
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

route:        128.8.0.0/15
descr:        aggregation
origin:       AS1
components:   {128.8.0.0/15^-}
aggr-mtd:     outbound AS-ANY
export-comps: {128.8.8.0/24}
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

route:  	128.8.0.0/15
origin: 	AS1
components: {128.8.0.0/15^-}
aggr-mtd:	outbound AS-ANY
inject: 	at 1.1.1.1 action dpa = 100;
inject: 	at 1.1.1.2 action dpa = 110;

$$

route:  	128.8.0.0/15
origin: 	AS1
components: {128.8.0.0/15^-}
aggr-mtd:	outbound AS-ANY
inject: 	upon HAVE-COMPONENTS {128.8.0.0/16, 128.9.0.0/16}
holes:  	128.8.8.0/24

$$

route-set:    RS-UUNETNL
descr:        community for routing domain UUNETNL
members:      194.152.32.0/24
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      yet even more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


rtr-set:      rtrs-mways-callback
descr:        mediaWays GmbH
members:      rmws-brln-de07.nw.mediaWays.net
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      yet even more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$

## ------------------------------------------------------------------------

## multiple instances of multiple attributes


person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
address:      Singel 258
phone:        +31 20 535 4444
nic-hdl:      DW6465-RIPE
changed:      denis@ripe.net 20010717
source:       RIPE

$$

role:         RIPE DBM
address:      Singel 258
e-mail:       ripe-dbm@ripe.net
e-mail:       denis@ripe.net
admin-c:      DW6465-RIPE
tech-c:       DW6465-RIPE
nic-hdl:      RD132-RIPE
changed:      ripe-dbm@ripe.net 20010810
source:       RIPE

$$


mntner:       RIPE-DBM-MNT
descr:        Mntner for RIPE DBM objects.
admin-c:      DW6465-RIPE
upd-to:       ripe-dbm@ripe.net
upd-to:       denis@ripe.net
auth:         NONE
mnt-by:       RIPE-DBM-MNT
referral-by:  RIPE-DBM-MNT
changed:      ripe-dbm@ripe.net 20010717
source:       RIPE
override:     password

$$


as-block:     AS20480 - AS21503
desc:         description line 1
desc:         description line 2
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE
override:     password

$$


as-set:       AS-UUNETGR
descr:        macro for routing domain UUNETGR
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
changed:      denis@ripe.net
source:       RIPE

$$


aut-num:      AS21323
as-name:      RIBA-AS
descr:        Rijecka banka - member of the Bayerische Landesbank Group
tech-c:       DW6465-RIPE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20011024
source:       RIPE

$$


domain:       redhorse.sk
descr:        RED HORSE s.r.o.
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
zone-c:       DW6465-RIPE
zone-c:       DW6465-RIPE
changed:      hostmaster@sk-nic.sk 20011031
source:       RIPE

$$


filter-set    fltr-caladan-block
descr:        Routes we don't import/export
filter:       { 127.0.0.0/8^+ }
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      chris@caladan.net 20011022
source:       RIPE

$$


inet6num:     2001:06A8::/35
netname:      BE-BELNET-20001101
descr:        BELNET
country:      BE
country:      GB
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20001101
source:       RIPE

$$


inetnum:      194.152.32.0 - 194.152.63.255
netname:      DE-JIPPII-951117
descr:        was de.ipf
country:      DE
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
status:       ALLOCATED PA
mnt-by:       RIPE-DBM-MNT
mnt-by:       RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20010518
source:       RIPE

$$


inet-rtr:     core1uk.ip.eu-X.com
descr:        Cisco 7507, TFM40, Telehouse, London, UK
local-as:     AS21323
ifaddr:       194.152.44.0 masklen 32
ifaddr:       194.152.44.55 masklen 32
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      jules@eu-X.com 20011020
source:       RIPE

$$


key-cert:     PGPKEY-B995AB52
certif:       -----BEGIN PGP PUBLIC KEY BLOCK-----
certif:       Version: PGP 6.5.8
certif:       
certif:       mQGiBDveuHERBADbIE9AVCnW/fIR8JbiEoThl3TkO0GKah94fLaivYajj5udDi8M
certif:       R8RyHiiUADD71qZEEUXRhBaBZ8yHa3bcQEKWFs7zX1zV+aQ3QDWH5oKUjPgMXoLQ
certif:       B7DCHKJ9U9mG/ujFkXeG+NSohgwgXVooD3taf31kG4fnOgoW/mDipEUpNQCg/9B1
certif:       0FHuw7Dl5yeq/9FLj34W+C8EAJ7l9RM+e0XnuhlkTUg1hZPTBpGkFJzmanU/C9jY
certif:       na2zmT/ClwSyfCCxMwbUHiKEzKOlcprDezZoGHtTbonDBUl3DChd5i6+WCnQSeOJ
certif:       Z+vm5wegJPh8UvKSmTNH6X52D4RmVYvmtq6Y5Ju999hVZP8oGumeQs23krMg9DV5
certif:       prMiBACEDY78jy9HwMgD6dNSJyII2uzECm2A0aIxxv0xNUUuyJraeGW/mm67yPDr
certif:       tPcp3G3Q77ff91yuoTIpJLzO5uT3ex0oUeyVN6HQVemuOuKt4yIQQs7E9Po9xfOn
certif:       YU5n9JMvin1dLcddUtNIRwxhN50L+K0Ma5cy75dOPDyEWr1+LLQiSm9uYXRoYW4g
certif:       SGFtbW9uZCA8cmlwZUBza3kubmV0LnVrPokATgQQEQIADgUCO964cQQLAwECAhkB
certif:       AAoJEGxEm065latSvEAAoP+YNZy+CC8xTaQMNnpOEi9e1ljJAKCwGu6wUHsq0fUR
certif:       hHFmuJ07geCjzrkBDQQ73rxwEAQA6kMRMdUKU8FKqC1G21gM8mHFQNvSx3wUq+A9
certif:       ICdZNj9FEAbd08KE51Q8IFBuTYUtYntuuX1m33IyKE5JG9cYzHVRj3P2UUfQsp7J
certif:       YyWuDeAkOTz6oWUn6G2imBLchThxE5l9ksfcVPxO7G82DWLc403Eg3ruZq3wl5B8
certif:       hmqSU5kAAgIEAJr4sowD9lT0G17cfFaeD7vKqyOXqbSAdN8v0H4RxeRdg0Ej5vgx
certif:       RNy77+tk8BkzRPEVgZnuQu8wKL69GvCQ0/7lncB//9LNMz68pPvtk83RK41goNlo
certif:       E4egoHhbuzgV466kZFAimDB69OD7cjK9uUgPT+7sj6UpB3xUEjsC5K8siQBGBBgR
certif:       AgAGBQI73rxwAAoJEGxEm065latSv8MAnRL+PnfmGBLFFWfkU0WmYPTDSBOrAJ9r
certif:       aX33CUA04I8epPVrSaWQbAbVgw==
certif:       =isph
certif:       -----END PGP PUBLIC KEY BLOCK-----
mnt-by:       RIPE-DBM-MNT
changed:      ripe@sky.net.uk 20011030
source:       RIPE

$$


limerick:     LIM-OUR-SQL
text:         Our SQL
text:         Our MySQL
admin-c:      DW6465-RIPE
author:       DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      limerick-wg@ripe.net 19991206
source:       RIPE

$$


peering-set:  prng-KAPPA
descr:        DNT peering with KAPPA
peering:      AS21323 at 194.152.44.0
peering:      AS12751 at 194.152.44.55
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


route:        62.212.79.0/29
descr:        LEASEWEB-INX-CRR
origin:       AS21323
holes:        194.152.32.0/32
holes:        194.152.33.0/32
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$


route-set:    RS-UUNETNL
descr:        community for routing domain UUNETNL
mbrs-by-ref:  RIPE-DBM-MNT
mbrs-by-ref:  RIPE-DBM-MNT
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


rtr-set:      rtrs-mways-callback
descr:        mediaWays GmbH
descr:        Germany
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
mnt-by:       RIPE-DBM-MNT
changed:      cristi@dnt.ro 20010623
source:       RIPE

$$


## ------------------------------------------------------------------------

## object with AUTO-1 in attribute value

person:       Fred Dibner
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      AUTO-1
changed:      denis@ripe.net 20010717
source:       RIPE

$$

## objects with AUTO-1,2,3 and references to AUTO in attribute values

person:       Bill Gates
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      AUTO-1
changed:      denis@ripe.net 20010717
source:       RIPE

person:       Tony Blair
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      AUTO-2
changed:      denis@ripe.net 20010717
source:       RIPE

role:         UK Gov
address:      Westminster
e-mail:       denis@ripe.net
admin-c:      AUTO-1
tech-c:       AUTO-2
nic-hdl:      AUTO-3UKG
changed:      ripe-dbm@ripe.net 20010810
source:       RIPE

$$


## ------------------------------------------------------------------------

## changed line with no date specified

person:       Walker D
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      AUTO-1
remarks:      free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net
source:       RIPE

$$

## second changed line with no date specified

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
changed:      denis@ripe.net
source:       RIPE

$$

## ------------------------------------------------------------------------

## end of line comment

person:       Denis Walker   # this is my name
address:      RIPE Network Coordination Centre (NCC) # this is the addresss
phone:        +31 20 535 4444   # and the phone number
fax-no:       +31 20 535 4445#and the fax number
e-mail:       denis@ripe.net#this is comment and not part of the email address
nic-hdl:      DW6465-RIPE		# the nic handle
remarks:      some more free text # should not need the # here
notify:       denis@ripe.net  # comment with a # in it
mnt-by:       RIPE-DBM-MNT  ###maintainer
changed:      denis@ripe.net 20010717  #changed line comment
source:       RIPE  # and finally the source

$$

## continuation lines

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      free text
              continuation after a space in column 0
			  continuation after a tab in column 0
+             continuation after a + in column 0
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$

## mixed case attribute names

PerSon:       Denis Walker
ADDRESS:      RIPE Network Coordination Centre (NCC)
pHONE:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$


## more than one value for an attribute

as-set:       AS-GBLX
descr:        ASs of GlobalCrossing
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
source:       RIPE

$$

## free text attribute with no value

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$

## ------------------------------------------------------------------------

## multiple country codes as one attribute value

inetnum:      194.152.32.0 - 194.152.63.255
netname:      DE-JIPPII-951117
descr:        was de.ipf
country:      DE BE GB
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
rev-srv:      irc.rdns.de
status:       ALLOCATED PA
remarks:      even more free text
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
mnt-lower:    RIPE-DBM-MNT
mnt-routes:   RIPE-DBM-MNT
changed:      hostmaster@ripe.net 20010518
source:       RIPE

$$

## ------------------------------------------------------------------------

## rpsl syntax checks

## ------------------------------------------------------------------------

## subject line test, anything other than keywords and the subject line 
## should be ignored

>>> time: Mon Nov  5 01:46:10 2001 MAIL UPDATE <<<

Date: Fri, 2 Nov 2001 15:18:03 +0100 (MET)
From: Denis Walker <denis@ripe.net>
To: auto-dbm@ripe.net
Reply-To: denis@ripe.net
Subject: IP assignment request, ID=12978889, HDL=AUTO-1
Content-Length: 286

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      subject line test
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$

## subject line test, NEW

>>> time: Mon Nov  5 01:46:10 2001 MAIL UPDATE <<<

Date: Fri, 2 Nov 2001 15:18:03 +0100 (MET)
From: Denis Walker <denis@ripe.net>
To: auto-dbm@ripe.net
Reply-To: denis@ripe.net
Subject: NEW
Content-Length: 286

person:       D Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      AUTO-1
remarks:       subject line test
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$

## ------------------------------------------------------------------------

## delete an object

person:       D W
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      DW999999-RIPE
changed:      denis@ripe.net 20010717
source:       RIPE

$$

person:       D W
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
nic-hdl:      DW999999-RIPE
changed:      denis@ripe.net 20010717
source:       RIPE
delete:       deletion test

$$

## ------------------------------------------------------------------------

## cross notifications with overlapping routes

route:        10.0.0.0/8
descr:        route 1
origin:       AS21323
cross-mnt:    RIPE-DBM-MNT
cross-nfy:    DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

route:        10.10.0.0/16
descr:        route 2 overlaps with route 1
origin:       AS12751
notify:       shane@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      technical@leaseweb.nl 20011030
source:       RIPE

$$

## ------------------------------------------------------------------------


## overflow tests

## many values for a single attribute with continuation lines

as-set:       AS-GBLX
descr:        ASs of GlobalCrossing
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510,
    		  AS2518, AS2519, AS2527, AS2534, AS2707, AS2711,
    		  AS3043, AS3132, AS3149, AS3463, AS3512, AS3742,
    		  AS3846, AS3931, AS4058, AS4211, AS4230, AS4258,
    		  AS4628, AS4648, AS4673, AS4675, AS4685, AS4688,
    		  AS4693, AS4755, AS4780, AS4941, AS5026, AS5033,
    		  AS5076, AS5097, AS5430, AS5651, AS5668, AS5684,
    		  AS5705, AS6074, AS6095, AS6123, AS6140, AS6220,
    		  AS6221, AS6358, AS6371, AS6419, AS6471, AS6484,
    		  AS6555, AS6576, AS6762, AS6950, AS6954, AS6993,
    		  AS6999, AS7011, AS7055, AS7138, AS7296, AS7321,
    		  AS7351, AS7395, AS7503, AS7506, AS7514, AS7518,
    		  AS7540, AS7670, AS7673, AS7683, AS7770, AS7845,
    		  AS7859, AS7883, AS7908, AS7930, AS7936, AS7976,
    		  AS8057, AS8082, AS8120, AS8153, AS9304, AS9370,
    		  AS9595, AS9600, AS9603, AS9607, AS9609, AS9610,
    		  AS9729, AS9823, AS9824, AS9826, AS10007, AS10026,
    		  AS10032, AS10325, AS10489, AS10732, AS10860, AS10910,
    		  AS10911, AS10913, AS11022, AS11023, AS11042, AS11162,
    		  AS11192, AS11206, AS11220, AS11271, AS11325, AS11333,
    		  AS11378, AS11416, AS11443, AS11456, AS11463, AS11480,
    		  AS11563, AS11588, AS11593, AS11656, AS11669, AS11674,
    		  AS11680, AS11711, AS11731, AS11841, AS11880, AS11899,
    		  AS11913, AS11935, AS11992, AS12077, AS12092, AS12114,
    		  AS12117, AS12119, AS12158, AS12176, AS12220, AS13129,
    		  AS13328, AS13344, AS13345, AS13423, AS13525, AS13549,
    		  AS13609, AS13627, AS13629, AS13646, AS13703, AS13734,
    		  AS13744, AS13768, AS13791, AS13853, AS13955, AS13956,
    		  AS13957, AS14001, AS14022, AS14051, AS14167, AS14184,
    		  AS14205, AS14242, AS14281, AS14294, AS14310, AS14320,
    		  AS14349, AS14361, AS14414, AS14446, AS14466, AS14471,
    		  AS14494, AS14501, AS14569, AS14576, AS14589, AS14671,
    		  AS14677, AS14730, AS14741, AS14742, AS14743, AS14744,
    		  AS14745, AS14757, AS14828, AS14869, AS14895, AS14917,
    		  AS14936, AS14963, AS14986, AS14991, AS15043, AS15077,
    		  AS15111, AS15138, AS15255, AS15270, AS15285, AS15286,
    		  AS15289, AS15300, AS15331, AS15347, AS15870, AS15878,
    		  AS16392, AS16395, AS16396, AS16399, AS16405, AS16412,
    		  AS16429, AS16471, AS16502, AS16544, AS16555, AS16561,
    		  AS16595, AS16647, AS16659, AS16676, AS16682, AS16713,
    		  AS16739, AS16808, AS16809, AS16842, AS16912, AS16922,
    		  AS16948, AS17034, AS17093, AS17124, AS17184, AS17239,
    		  AS17256, AS17294, AS17301, AS17311, AS17358, AS17382,
    		  AS17435, AS17506, AS17673, AS17675, AS17676, AS17724,
    		  AS17916, AS18448, AS18457, AS18591, AS18611, AS18614,
    		  AS18640, AS18665, AS18692, AS18695, AS18712, AS18786,
    		  AS18803, AS18809, AS18837, AS18885, AS18910, AS18950,
    		  AS18992, AS18993, AS18994, AS18996, AS18997, AS19012,
    		  AS19024, AS19082, AS19087, AS19105, AS19187, AS19193,
    		  AS19202, AS19358, AS19367, AS19381, AS19413, AS19421,
    		  AS19458, AS19479, AS19504, AS19535, AS19540, AS19548,
    		  AS19609, AS19642, AS19681, AS19695, AS19709, AS19764,
    		  AS19770, AS19836, AS19854, AS19897, AS19916, AS19930,
    		  AS19934, AS19988, AS20008, AS20012, AS20078, AS20083,
    		  AS20137, AS20145, AS20148, AS20261, AS20292, AS20355,
    		  AS20383, AS20401, AS20419, AS20435, AS21524, AS21572,
    		  AS21604, AS21648, AS21651, AS21748, AS21756, AS21764,
    		  AS21840, AS21859, AS21877, AS21947, AS21954, AS21971,
    		  AS21990, AS22028, AS22032, AS22043, AS22073, AS22098,
    		  AS22134, AS22167, AS22179, AS22213, AS22232, AS22279,
    		  AS22307, AS22308, AS22365, AS22372, AS22419, AS22433,
    		  AS22571, AS22602, AS22620, AS-GBLXEU
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
source:       RIPE

$$

## many duplicate member attributes

as-set:       AS-GBLX
descr:        ASs of GlobalCrossing
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
members:      AS20, AS714, AS1659, AS1784, AS1932, AS2510
members:      AS2518, AS2519, AS2527, AS2534, AS2707, AS2711
members:      AS3043, AS3132, AS3149, AS3463, AS3512, AS3742
members:      AS3846, AS3931, AS4058, AS4211, AS4230, AS4258
members:      AS4628, AS4648, AS4673, AS4675, AS4685, AS4688
members:      AS4693, AS4755, AS4780, AS4941, AS5026, AS5033
members:      AS5076, AS5097, AS5430, AS5651, AS5668, AS5684
members:      AS5705, AS6074, AS6095, AS6123, AS6140, AS6220
members:      AS6221, AS6358, AS6371, AS6419, AS6471, AS6484
members:      AS6555, AS6576, AS6762, AS6950, AS6954, AS6993
members:      AS6999, AS7011, AS7055, AS7138, AS7296, AS7321
members:      AS7351, AS7395, AS7503, AS7506, AS7514, AS7518
members:      AS7540, AS7670, AS7673, AS7683, AS7770, AS7845
members:      AS7859, AS7883, AS7908, AS7930, AS7936, AS7976
members:      AS8057, AS8082, AS8120, AS8153, AS9304, AS9370
members:      AS9595, AS9600, AS9603, AS9607, AS9609, AS9610
members:      AS9729, AS9823, AS9824, AS9826, AS10007, AS10026
members:      AS10032, AS10325, AS10489, AS10732, AS10860, AS10910
members:      AS10911, AS10913, AS11022, AS11023, AS11042, AS11162
members:      AS11192, AS11206, AS11220, AS11271, AS11325, AS11333
members:      AS11378, AS11416, AS11443, AS11456, AS11463, AS11480
members:      AS11563, AS11588, AS11593, AS11656, AS11669, AS11674
members:      AS11680, AS11711, AS11731, AS11841, AS11880, AS11899
members:      AS11913, AS11935, AS11992, AS12077, AS12092, AS12114
members:      AS12117, AS12119, AS12158, AS12176, AS12220, AS13129
members:      AS13328, AS13344, AS13345, AS13423, AS13525, AS13549
members:      AS13609, AS13627, AS13629, AS13646, AS13703, AS13734
members:      AS13744, AS13768, AS13791, AS13853, AS13955, AS13956
members:      AS13957, AS14001, AS14022, AS14051, AS14167, AS14184
members:      AS14205, AS14242, AS14281, AS14294, AS14310, AS14320
members:      AS14349, AS14361, AS14414, AS14446, AS14466, AS14471
members:      AS14494, AS14501, AS14569, AS14576, AS14589, AS14671
members:      AS14677, AS14730, AS14741, AS14742, AS14743, AS14744
members:      AS14745, AS14757, AS14828, AS14869, AS14895, AS14917
members:      AS14936, AS14963, AS14986, AS14991, AS15043, AS15077
members:      AS15111, AS15138, AS15255, AS15270, AS15285, AS15286
members:      AS15289, AS15300, AS15331, AS15347, AS15870, AS15878
members:      AS16392, AS16395, AS16396, AS16399, AS16405, AS16412
members:      AS16429, AS16471, AS16502, AS16544, AS16555, AS16561
members:      AS16595, AS16647, AS16659, AS16676, AS16682, AS16713
members:      AS16739, AS16808, AS16809, AS16842, AS16912, AS16922
members:      AS16948, AS17034, AS17093, AS17124, AS17184, AS17239
members:      AS17256, AS17294, AS17301, AS17311, AS17358, AS17382
members:      AS17435, AS17506, AS17673, AS17675, AS17676, AS17724
members:      AS17916, AS18448, AS18457, AS18591, AS18611, AS18614
members:      AS18640, AS18665, AS18692, AS18695, AS18712, AS18786
members:      AS18803, AS18809, AS18837, AS18885, AS18910, AS18950
members:      AS18992, AS18993, AS18994, AS18996, AS18997, AS19012
members:      AS19024, AS19082, AS19087, AS19105, AS19187, AS19193
members:      AS19202, AS19358, AS19367, AS19381, AS19413, AS19421
members:      AS19458, AS19479, AS19504, AS19535, AS19540, AS19548
members:      AS19609, AS19642, AS19681, AS19695, AS19709, AS19764
members:      AS19770, AS19836, AS19854, AS19897, AS19916, AS19930
members:      AS19934, AS19988, AS20008, AS20012, AS20078, AS20083
members:      AS20137, AS20145, AS20148, AS20261, AS20292, AS20355
members:      AS20383, AS20401, AS20419, AS20435, AS21524, AS21572
members:      AS21604, AS21648, AS21651, AS21748, AS21756, AS21764
members:      AS21840, AS21859, AS21877, AS21947, AS21954, AS21971
members:      AS21990, AS22028, AS22032, AS22043, AS22073, AS22098
members:      AS22134, AS22167, AS22179, AS22213, AS22232, AS22279
members:      AS22307, AS22308, AS22365, AS22372, AS22419, AS22433
members:      AS22571, AS22602, AS22620, AS-GBLXEU
mbrs-by-ref:  RIPE-DBM-MNT
remarks:      more free text
tech-c:       DW6465-RIPE
admin-c:      DW6465-RIPE
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      eric-apps@eu.uu.net 20011101
source:       RIPE


## long remarks line (last test in the file)

person:       Denis Walker
address:      RIPE Network Coordination Centre (NCC)
phone:        +31 20 535 4444
fax-no:       +31 20 535 4445
e-mail:       denis@ripe.net
nic-hdl:      DW6465-RIPE
remarks:      free text
              continuation after a space in column 0
			  continuation after a tab in column 0
+             continuation after a + in column 0
         source code for UP_util.cc   approx size 129096
		  /***************************************
			$Revision: 1.1 $

			UP module utilities

			Status: REVIEWED, NOT TESTED

			Author(s):       Engin Gunduz

			******************/ /******************
			Modification History:
        		  engin (17/01/2000) Created.
				  denis (31/08/2001) Modified for new API
			******************/ /******************
			Copyright (c) 2000                              RIPE NCC

			All Rights Reserved

			Permission to use, copy, modify, and distribute this software and its
			documentation for any purpose and without fee is hereby granted,
			provided that the above copyright notice appear in all copies and that
			both that copyright notice and this permission notice appear in
			supporting documentation, and that the name of the author not be
			used in advertising or publicity pertaining to distribution of the
			software without specific, written prior permission.

			THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
			ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS; IN NO EVENT SHALL
			AUTHOR BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
			DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
			AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
			OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
		   ***************************************/

		  #include <time.h>
		  #include "dbupdate.h"
		  #include "UP_extrnl_syntax.h"
		  #include "ud.h"

		  extern int tracing;
		  extern char * overridecryptedpw;
		  extern int test_mode;
		  extern char * updlog;
		  extern char * update_host;
		  extern int update_port;
		  extern char * query_host;
		  extern int query_port;
		  extern char * humailbox;
		  extern char * autobox;
		  extern char * netupdclientIP;

		  extern int reading_from_mail;
		  extern int networkupdate;


		  extern char *update_mail_sender;
		  extern char *update_mail_subject;
		  extern char *update_mail_date;
		  extern char *update_mail_ID;
		  extern char *update_mail_cc;

		  extern char *DBhost;
		  extern int  DBport;
		  extern char *DBuser;
		  extern char *DBname;
		  extern char *DBpasswd;


		  /* authorise function takes the auth_vector, credentials struct, and 'overriden'
			 variable. If overriden == 1, then it immediately returns UP_AUTH_OK 
			 (because this means that the update contained a valid override attribute).
			 Else, it goes through the auth_vector and when it finds a an "auth:"
			 attribute which passes, then it returns UP_AUTH_OK. Otherwise, it returns
			 UP_AUF (authorisation failed) */

		  int authorise(GSList * auth_vector, credentials_struct credentials, int overriden)
		  {
			int result = 0;

			if (tracing)
			{
    		  printf("TRACING: authorise started with override: %i\n", overriden);
			}

			/* If 'overriden' variable is 1, then return UP_AUTH_OK immediately */
			if (overriden == 1)
			{
    		  return UP_AUTH_OK;
			}
			else
			{
    		  result = AU_authorise(auth_vector, credentials);
    		  if (tracing)
			  {
    			printf("TRACING: authorise: AU_authorise returned %i\n", result);
    		  }
    		  if (result > 0)
			  {
    			return UP_AUTH_OK;
    		  }
    		  else
			  {
    			return UP_AUF; /* authorisation failed */
    		  }
			}
		  }



		  /* interprets the result string coming from RIPupd
			 It is called by send_object_db.
			 It returns the error no returned from RIPupd.  */

		  int interpret_ripdb_result(const char * string)
		  {
			 char * error_no = NULL;
			 char ** temp = NULL, ** temp2 = NULL;
			 int i;
			 int err = 0;

			/* if the string is NULL or empty, then return error */
			if (string == NULL || strlen(string) == 0)
			{
    		  return 0; 
			}

			/* split the string into lines */
			temp = g_strsplit(string , "\n", 0);
			for (i = 0; temp[i] != NULL; i++)
			{
    		  if (i == 0)
			  { /* this line must contain "%ERROR " string in the beginning */
    			temp2 = g_strsplit(temp[0], " ", 0);
    			error_no = strdup(temp2[1]);
    			g_strfreev(temp2);
    			err = atoi(error_no);
    			if (tracing)
				{
        		  printf("TRACING: interpret_ripdb_result: error_no is [%s]\n", error_no);
    			}
    		  }
			  else if (error_no != NULL && strcmp(error_no, "0") != 0)
			  {
    		  }
			}
			g_strfreev(temp);
			if (error_no != NULL)
			{
    		  free(error_no);
			}
			return err; /* 0 means no error in this context */
		  }



		  /* Gets assigned NIC hdl from the string that is returned from 
			 RIPupdate */
		  void get_assigned_nic(char * nic_hdl, const char * string)
		  {
			 char * error_no = NULL;
			 char ** temp = NULL, ** temp2 = NULL;
			 int i;

			/* if the string is NULL or empty, then return error */
			if (string == NULL || strlen(string) == 0)
			{
    		  return; 
			}

			/* split the string into lines */
			temp = g_strsplit(string , "\n", 0);
			for (i = 0; temp[i] != NULL; i++)
			{
    		  if (i == 0)
			  { /* this line must contain "%ERROR " string in the beginning */
    			temp2 = g_strsplit(temp[0], " ", 0);
    			error_no = strdup(temp2[1]);
    			g_strfreev(temp2);
    			if (tracing)
				{
        		  printf("TRACING: get_assigned_nic: error_no is [%s]\n", error_no);
    			}
    		  }
			  else if (error_no != NULL && strcmp(error_no, "0") != 0)
			  {
    		  }
			  else if (error_no != NULL && strcmp(error_no, "0") == 0 && i == 1)
			  { /* look for assigned NIC hdl */
    			/* in the second line RIPupdate returns for example "I[65][EK3-RIPE]" We
        		   need to extract EK3-RIPE part */
    			nic_hdl = strncpy(nic_hdl, rindex(temp[i],'[') + 1 ,  
                                		   rindex(temp[i],']') - rindex(temp[i],'[') - 1);
    			nic_hdl[rindex(temp[i],']') - rindex(temp[i],'[') - 1] = '\0';
    			if (tracing && nic_hdl != NULL)
				{
        		  printf("TRACING: get_assigned_nic will return [%s]\n", nic_hdl);
    			}
    			g_strfreev(temp);
    			return;
    		  }
			}
			g_strfreev(temp);
			return;
		  }



		  /* Obtains a transaction ID for an object. Will be called from send_object_db */
		  int up_get_transaction_id()
		  {
			SQ_connection_t * sql_connection;
			SQ_result_set_t *result;
			int error;
			long new_id;

			sql_connection = SQ_get_connection(DBhost, DBport, DBname, DBuser, DBpasswd); 
			if (!sql_connection)
			{
    		  fprintf(stderr, "No SQL connection\n");
    		  exit(1);
			}
			error = SQ_execute_query(sql_connection, "INSERT INTO tid VALUES(NULL)", &result);
			if (error)
			{
    		  fprintf(stderr,"ERROR: %s\n", SQ_error(sql_connection));
    		  exit(1);
			}

			new_id = mysql_insert_id(sql_connection);

			SQ_close_connection(sql_connection);  

			return new_id;
		  }



		  /* sends the object to the database. char * operation is either 'ADD' ,'DEL' or 'UPD'
			 assigned_NIC is filled in if this is a person/role creation with AUTO nic hdl 
			 assigned_NIC must be allocated enough memory before send_object_db is called 

			 If the called do not expect a NIC hdl back, then assigned_NIC can be given NULL
			 */
		  up_ripupd_result_struct * send_object_db(rpsl_object_t *object, char * assigned_NIC, char * operation)
		  {
			int sockfd, numbytes;  
			char buf[MAXDATASIZE + 1];
			struct hostent *he;
			struct sockaddr_in their_addr; /* connector's address information */
			char *result_string = NULL;
			int err = 0;
			char *to_be_sent = NULL;
			int tr_id;
			char * tr_id_str;
			char * tempstr;
			int error_check;
			rpsl_object_t *sent_object;

			up_ripupd_result_struct * return_struct;

			return_struct = (up_ripupd_result_struct *)malloc(sizeof(up_ripupd_result_struct));
			return_struct->error_str = NULL;

			/* copy the object, remove the override password and create a text string */
			sent_object = rpsl_object_copy(object);
			error_check = rpsl_object_remove_attr_name(sent_object,"override",NULL);
			to_be_sent = rpsl_object_get_text(sent_object);
			rpsl_object_delete(sent_object);
			free(sent_object);

			/* get the transaction ID, to be sent to RIPupdate*/
			tr_id = up_get_transaction_id();

			/* convert it into a string */
			tr_id_str = (char *)malloc(64);
			sprintf(tr_id_str, "%d", tr_id);

			if ((he=gethostbyname(update_host)) == NULL)
			{  /* get the host info */
    			perror("gethostbyname");
    			exit(1);
			}

			if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1)
			{
    			perror("socket");
    			exit(1);
			}

			their_addr.sin_family = AF_INET;  	/* host byte order */
			their_addr.sin_port = htons(update_port);    /* short, network byte order */
			their_addr.sin_addr = *((struct in_addr *)he->h_addr);
			bzero(&(their_addr.sin_zero), 8); 	/* zero the rest of the struct */


			if (connect(sockfd, (struct sockaddr *)&their_addr, 
    											  sizeof(struct sockaddr)) == -1)
			{
    			perror("connect");
    			exit(1);
			}

			if (send(sockfd, operation , strlen(operation), 0) == -1)
    			perror("send");
			if (send(sockfd, " ", strlen(" "), 0) == -1)
    			perror("send");	 
			if (send(sockfd, tr_id_str, strlen(tr_id_str), 0) == -1)
    			perror("send");	 
			if (send(sockfd, "\n\n" , strlen("\n\n"), 0) == -1)
    			perror("send");
			if (send(sockfd, to_be_sent, strlen(to_be_sent), 0) == -1)
    			perror("send");
			if (send(sockfd, "\n\n", 2, 0)  == -1)
    			perror("send");
			/* send the ACK now */
			if (send(sockfd, "ACK ",strlen("ACK "), 0)  == -1)
    			perror("send");
			if (send(sockfd, tr_id_str, strlen(tr_id_str), 0) == -1)
    			perror("send");	 
			if (send(sockfd, "\n\n",strlen("\n\n"), 0)  == -1)
    			perror("send");


			while ((numbytes=recv(sockfd, buf, MAXDATASIZE, 0)) != 0)
			{
    			buf[numbytes] = '\0';
    			if (tracing)
    			{
    			  printf("%s",buf);
    			}
    			if (result_string == NULL)
    			{
    			  result_string = strdup(buf);
    			}
    			else
    			{
    			  result_string = (char *)realloc(result_string, 
    								 strlen(result_string) + strlen(buf) + 1);
    			  result_string = strcat(result_string, buf);
    			}
    			if (strstr(result_string,"\n\n") != NULL)
    			{ /* if the result_string contains
    			   an empty line at the end, we will close */
    			  break;
    			};
			}

			free(tr_id_str);
			err = interpret_ripdb_result(result_string);
			if (assigned_NIC != NULL)
			{ /* if the caller of the function expected to get a NIC handle */
    		  get_assigned_nic(assigned_NIC, result_string);
			}
			close(sockfd);
			free(to_be_sent);
			return_struct->result = err;

			//return_struct->error_str = strdup(result_string); 
			/* According to the error no got from RIPupdate, construct an error string  */
			switch (return_struct->result)
			{
    		  case 0: break; 
    		  case ERROR_U_MEM: 
    		  case ERROR_U_DBS:
    		  case ERROR_U_BADOP:
    		  case ERROR_U_COP:
    		  case ERROR_U_NSUP:
    		  case ERROR_U_BUG:
    			tempstr = (char *)malloc(1024);
    			snprintf(tempstr, 1024, "***Error: Please contact database admin: Error no %i",
    				return_struct->result);
    			return_struct->error_str = tempstr;
    			break; 
    		  case ERROR_U_OBJ:
    			tempstr = (char *)malloc(1024);
    			/* if the object contains refs to unknown objects */
    			if (strstr(result_string, "dummy") != NULL)
    			{
    			  /* if the response from RIPupd contains "dummy not allowed" string */
    			  snprintf(tempstr, 1024, "***Error: Unknown object referenced");
    			}
    			else
    			{
    			  snprintf(tempstr, 1024, "***Error: Object is referenced from other objects");
    			}
    			return_struct->error_str = tempstr;
    			break; 
    		  case ERROR_U_AUT:
    			tempstr = (char *)malloc(1024);
    			snprintf(tempstr, 1024, "***Error: Membership authorisation failure");
    			return_struct->error_str = tempstr;
    			break; 
    		  default: 
    			tempstr = (char *)malloc(1024);
    			snprintf(tempstr, 1024, "***Error: Please contact database admin: Error no %i",
    				return_struct->result);
    			return_struct->error_str = tempstr;
    			break; 
			}
			return return_struct; 
		  }



		  /* takes an object (pre-parsed) and returns its first attrib if it is not
			 a person/role, and returns the nic-hdl if it is a person/role object */
		  char * get_search_key(rpsl_object_t *object, const char * type)
		  {
    		  char *primary_key = NULL;
			  char *lctype;
			  GList *attr_list;

    		  if(object == NULL) return NULL;

			  lctype = strdup(type);
			  g_strdown(lctype);
			  if ( strcmp(lctype, "person") == 0 || strcmp(lctype, "role") == 0 )
			  {
				  /* this is a person or role object */
				  /* get the nic-hdl attribute */
				  attr_list = rpsl_object_get_attr(object, "nic-hdl");
			  }
			  else
			  {
				  /* this is NOT a person or role object */
				  /* get the class attribute */
				  attr_list = rpsl_object_get_attr(object, type);
			  }

			  if ( attr_list )
			  {
				  primary_key = rpsl_attr_get_clean_value((rpsl_attr_t *)(attr_list->data));
			  }
			  free(lctype);
			  return primary_key ;
		  }



		  /* sends char * arg to the specified host's specified port, and
			 returns the reply as a string. This is used to query the
			 whois host. Probably we must use WC (whois client) module here,
			 but it must be extented */
		  char * send_and_get(char * host, int port, char * arg)
		  {
        		  int sockfd, numbytes; 
        		  char * result = NULL; 
        		  char buf[MAXDATASIZE + 1];
        		  struct hostent *he;
        		  struct sockaddr_in their_addr; /* connector's address information */

        		  if(tracing)
				  { 
        			printf("TRACING: send_and_get: arg : [%s]; port: [%i]; host: [%s]\n", arg, port, host);
        		  }

        		  if ((he=gethostbyname(host)) == NULL)
				  {  /* get the host info */
            		  perror("gethostbyname");
            		  exit(1);
        		  }

        		  if(tracing) 
				  { 
        			printf("TRACING: send_and_get: called gethostbyname\n");
        		  }

        		  if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1)
				  {
            		  perror("socket");
            		  exit(1);
        		  }

        		  if(tracing)
				  { 
        			printf("TRACING: send_and_get: called socket\n");
        		  }

        		  their_addr.sin_family = AF_INET;      /* host byte order */
        		  their_addr.sin_port = htons(port);    /* short, network byte order */
        		  their_addr.sin_addr = *((struct in_addr *)he->h_addr);
        		  bzero(&(their_addr.sin_zero), 8);     /* zero the rest of the struct */

        		  if (connect(sockfd, (struct sockaddr *)&their_addr, 
                                            			sizeof(struct sockaddr)) == -1)
        		  {
            		  perror("connect");
            		  exit(1);
        		  }
        		  if (send(sockfd, arg , strlen(arg), 0) == -1)
            			 perror("send");
        		  if (send(sockfd, "\n",1,0)  == -1)
            			 perror("send");

        		  while ((numbytes=recv(sockfd, buf, MAXDATASIZE, 0)) != 0)
				  {
            		  buf[numbytes] = '\0';
            		  if (result == NULL)
					  {
            			result = strdup(buf);
            		  }
					  else
					  {
            			result = (char *)realloc(result, strlen(result) + strlen(buf) + 1);
            			result = strcat(result, buf);
            		  }
        		  }

        		  close(sockfd);
        		  return result;
		  }



		  /* counts the number of objects in a string */
		  int count_objects(char * arg)
		  {
    		  int count = 0;
    		  char *pos = NULL;
    		  char *temp = NULL;

    		  if(tracing) 
			  {
    			printf("TRACING: count_objects running\n");
    		  }

    		  if(arg != NULL)
			  {
    			temp = strdup(arg);
    		  }
			  else
			  {
    			return 0;
    		  }

    		  if(isalpha(arg[0]))
			  {
    			count++;
    		  }
			  else if(arg[0] == '\n' && isalpha(arg[1]))
			  {
    			count++;
    		  }
    		  while (pos = strstr(temp,"\n\n"))
			  {
    			pos[0] = 'a'; /* something non-EOL so that it won't be caught in the next loop */
    			if(isalpha(pos[2]))
				{
        		  count++;
    			}
    		  }
    		  if(tracing) 
			  {
    			printf("TRACING: count_objects returning %d\n", count);
    		  }
    		  free(temp);
    		  return count;
		  }



		  /* strips lines beginning with '%' off  */
		  char * strip_lines(char * arg)
		  {
    		  char ** temp = NULL;
    		  char * string = NULL;
    		  int i;

    		  if (arg == NULL)
			  {
    			 return NULL;
    		  }

    		  /* split the string into lines */
    		  temp = g_strsplit (arg, "\n", 0);

    		  for (i=0; temp[i] != NULL; i++)
			  {
    			if (temp[i][0] != '%')
				{
        		  if (string == NULL)
				  {
        			string = strdup(temp[i]);
        		  }
				  else
				  {
        			string = (char *)realloc(string, strlen(string) + strlen(temp[i]) + 2);
        			string = strcat(string, "\n");
        			string = strcat(string, temp[i]);
        		  }
    			}
    		  }
    		  return string;
		  }


		  /* Separates the objects in the given char * arg using "\n\n" as
			 separator. Returns a linked list whose data consist of separated
			 objects as  char *  */

		  GList * take_objects(char * arg)
		  {
    		  char ** objects=NULL;
    		  char ** temp = NULL;
    		  char * temp_object;
    		  GList * tobereturned = NULL;
    		  int i;

    		  arg = strip_lines(arg);

    		  objects =  g_strsplit(arg, "\n\n", 1000);
    		  temp = objects;
    		  for (i=0; temp[i] != NULL; i++)
			  {
    			/* strip off the trailing and leading white spaces-eols*/
    			g_strstrip(temp[i]);
    			if (strlen(temp[i]) > 0)
				{ /* if not an empty string */
        		  /* here we must add a "\n" at the end of the object, since RAToolSet parser can't
        			find the last attrib otherwise */
        		  temp_object = (char *)malloc(strlen(temp[i]) + 2);
        		  snprintf(temp_object, strlen(temp[i]) + 2, "%s\n", temp[i]);  
        		  tobereturned = g_list_append(tobereturned, temp_object);
    			}
    		  }
    		  return tobereturned;
		  }



		  /* takes the first object in the given char *, using empty lines as
			 separator */
		  char * take_object(char * arg)
		  {
    		  GList * objects;
    		  char * object;

    		  objects = take_objects(arg);
    		  if (g_list_length(objects) > 0)
			  {
    			object = strdup((char *)(g_list_nth_data(objects, 0)));
    		  }
			  else
			  {
    			return NULL;
    		  }
    		  g_list_free(objects);

    		  return object;
		  }



		  /* Takes an autnum_object, and returns the as-block containing this aut-num */
		  char * get_as_block(rpsl_object_t *autnum_object)
		  {
			char * search_key = NULL, * query_string = NULL;
			char * result = NULL;
			char *return_value = NULL;

			search_key = get_search_key(autnum_object,"aut-num");

			query_string = (char *)malloc(strlen("-Tas-block -r ")+strlen(search_key)+1);
			sprintf(query_string, "-Tas-block -r %s",search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
			  {
    			printf("No such as-block\n"); 
    		  }
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  if (tracing)
			  {
    			printf("More than one as-block returned\n");
    		  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }


		  /* Takes a route_object, and returns the aut-num mentioned in origin
			 attribute of this route */
		  char * get_aut_num_object(rpsl_object_t *route_object)
		  {
			char * search_key = NULL, * query_string = NULL;
			char * result = NULL;
			char *return_value = NULL;

			search_key = get_search_key(route_object,"origin");

			query_string = (char *)malloc(strlen("-Taut-num  -r ")+strlen(search_key)+1);
			sprintf(query_string, "-Taut-num -r %s",search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
			  {
    			printf("No such aut-num\n");
    		  }
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  if (tracing)
			  {
    			printf("More than one aut-num returned\n");
    		  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Takes a parsed domain_object, and returns the less specific domain of it */
		  char * get_less_specific_domain(rpsl_object_t *domain_object)
		  {
			char *search_key = NULL, *query_string = NULL;
			char *result = NULL, *domain = NULL;
			char *return_value = NULL;
			int i,j, length;
			char *temp = NULL;
			char **splitted;

			domain = get_search_key(domain_object,"domain");

			/* split the domain from its dots ('50' is the max # of pieces, this number is just arbitrary) */
			splitted =   g_strsplit((char *)strdup(domain), ".", 50);

			for (i=1; splitted[i] != NULL; i++)
			{
    		  /* in the following for loop, we will construct the 'less spec' domains
    			 to be looked up in the DB */ 
    		  for (j=i; splitted[j] !=NULL; j++)
			  {
    			if (j==i)
				{
        		  temp = (char *)strdup(splitted[j]);
    			}
				else
				{
        		  length = strlen(temp); 
    			  temp = (char *)realloc(temp, length + strlen(splitted[j]) + 2); 
				  strcat(temp, ".");
				  strcat(temp, splitted[j]);
    			}
    		  }

    		  query_string = (char *)malloc( strlen("-Tdomain -r -R ")+strlen(temp)+1 );
    		  sprintf(query_string, "-Tdomain -r -R %s", temp);
    		  result = send_and_get(query_host, query_port, query_string);
    		  free(query_string);
			  free(temp);

    		  if (count_objects(result) == 0)
			  {
				/* do nothing */
				free(result);
    		  }
			  else if (count_objects(result) > 1)
			  {
    			if (tracing)
				{
        		  printf("TRACING: get_less_specific_domain: More than one domains returned\n");
    			}
				free(result);
    			return NULL; /* error condition */
    		  }
			  else
			  { /* count_objects(result) == 1 */
    			return_value = take_object(result);
				free(result);
    			return return_value;
    		  }
			}
			g_strfreev(splitted);

			/* so, we couldn't  find any 'less specific' domain */
			return NULL;
		  }



		  /* Takes a hierarchical set_object, and returns the less specific set or auth-num of it
			 by striping down the object's name ( eg, for as35:rs-trial:rs-myset, 
			 as35:rs-trial is tried ) */
		  char * get_less_specific_set(rpsl_object_t *set_object, const char *type)
		  {
			char *search_key = NULL, *query_string = NULL;
			char *result = NULL;
			char *return_value = NULL;
			int i;

			search_key = get_search_key(set_object, type);

			for (i = strlen(search_key) -1; i > -1; i--)
			{
    		  if (search_key[i] == ':')
			  {
    			search_key[i] = '\0'; /* truncate the string */
    			break;
    		  }
    		  if (i == 0)
			  { /* if we've reached the beginning of the string 
    			(this means there wasn't any ';' in the string) */
    			free(search_key);
    			search_key = NULL;
    		  }
			}
			if ( search_key == NULL || strlen(search_key) == 0)
			{ /* this mustn't happen in fact, since 
    		  we make sure that the name of the 
    		  set_object contains a ':' in a proper place */
    		  return NULL;
			}

			query_string = (char *)malloc(strlen("-Taut-num,as-set,rtr-set,peering-set,filter-set,route-set -r ") 
        			 + strlen(search_key) + 1);
			sprintf(query_string, "-Taut-num,as-set,rtr-set,peering-set,filter-set,route-set -r %s", search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
    		  {
    			printf("get_less_specific_set: No such object\n");
			  }
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  if (tracing)
    		  {
    			printf("get_less_specific_set: More than one objects returned\n");
			  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Takes an inetnum or inet6num object and returns one less specific of it */
		  char * get_less_specific(rpsl_object_t *inetnum_object, const char *type)
		  {
			char *search_key = NULL, *query_string = NULL;
			char *result = NULL;
			char *return_value = NULL;

			search_key = get_search_key(inetnum_object, type);

			query_string = (char *)malloc(strlen("-Tinet6num -r -l ") + strlen(search_key) + 1);
			sprintf(query_string, "-T%s -r -l %s",type, search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  printf("No such type %s\n", type);
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  printf("More than one %s returned\n", type);
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Takes a parsed route object and returns one less specific inetnum */
		  char * get_less_spec_inetnum(rpsl_object_t *route_object)
		  {
			char * search_key = NULL, * query_string = NULL;
			char * result = NULL;
			char * return_value = NULL;

			search_key = get_search_key(route_object, "route");

			query_string = (char *)malloc(strlen("-Tinetnum -r -l ") + strlen(search_key) + 1);
			sprintf(query_string, "-Tinetnum -r -l %s", search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
			  {
    			printf("get_less_spec_inetnum: No such inetnum\n");
			  }
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  if (tracing)
			  {
    			printf("get_less_spec_inetnum: More than one inetnums returned\n");
			  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }


		  /* Takes a parsed route object and returns exact match inetnum */
		  char * get_exact_match_inetnum(rpsl_object_t *route_object)
		  {
			char * search_key = NULL, * query_string = NULL;
			char * result = NULL;
			char * return_value = NULL;

			search_key = get_search_key(route_object, "route");

			query_string = (char *)malloc(strlen("-Tinetnum -r -x ") + strlen(search_key) + 1);
			sprintf(query_string, "-Tinetnum -r -x %s", search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
			  {
    			printf("get_exact_match_inetnum: No such inetnum\n");
			  }
			  free(result);
    		  return NULL;
			}
			else if (count_objects(result) > 1)
			{
    		  if (tracing)
			  {
    			printf("get_exact_match_inetnum: More than one inetnums returned\n");
			  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) == 1 */
    		  return_value = take_object(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Takes a route object and returns exact matches of this route */
		  GList *get_exact_match_routes(rpsl_object_t *route_object)
		  {
			char *search_key = NULL, *query_string = NULL;
			char *result = NULL;
			GList * return_value = NULL;

			search_key = get_search_key(route_object, "route");

			query_string = (char *)malloc(strlen("-Troute -r -x ") + strlen(search_key) + 1);
			sprintf(query_string, "-Troute -r -x %s", search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if (tracing)
			  {
    			printf("get_exact_match_routes: No such route\n");
			  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) >= 1 */
    		  return_value = take_objects(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Takes a route object and returns (immediate) less specifics of this route */
		  GList *get_less_spec_routes(rpsl_object_t *route_object)
		  {
			char *search_key = NULL, *query_string = NULL;
			char *result = NULL;
			GList * return_value = NULL;

			search_key = get_search_key(route_object, "route");

			query_string = (char *)malloc(strlen("-Troute -r -l ") + strlen(search_key) + 1);
			sprintf(query_string, "-Troute -r -l %s", search_key);
			result = send_and_get(query_host, query_port, query_string);
			free(search_key);
			free(query_string);

			if (count_objects(result) == 0)
			{
    		  if(tracing)
			  {
    			printf("get_less_spec_routes: No such route\n");
			  }
			  free(result);
    		  return NULL;
			}
			else
			{ /* count_objects(result) >= 1 */
    		  return_value = take_objects(result);
			  free(result);
    		  return return_value;
			}
		  }



		  /* Gets an object as a parsed structure and returns its 'mnt-by' attributes as a 
			 GList (linked list)   */

		  GList *get_mntners(rpsl_object_t *object)
		  {
			GList *list_of_mntners = NULL;

			if(tracing)
			{
    		  printf("TRACING: get_mntners is running\n");
			}

			list_of_mntners = rpsl_object_get_attr(object, "mnt-by");

			return list_of_mntners; 
		  }



		  /* Gets a GList of strings and returns 1 if one of them starts with substr, 0 otherwise */
		  int strstr_in_list(GList *list, const char *substr)
		  {
		   GList * item = NULL;
		   char * word; 

			if (tracing)
			{
    		  printf("TRACING: strstr_in_list is running\n");
			}

		   for ( item = list; item != NULL ; item = g_list_next(item) )
		   {
			 word = strdup((char *)(item->data));
			 g_strup(word);
			 if (strstr(word, substr) == word)
			 {
    		   free(word);
    		   return 1;
			 }
			 free(word);
		   }
		   /* none of them matched, so return 0 */
		   return 0; 
		  }

		  /* Gets a GList of attr structures and returns 1 if one of their (upper case)values starts with substr, 0 otherwise */
		  int strstr_in_attr_list(GList * list, const char * substr)
		  {
		   GList * item = NULL;
		   char * word; 

			if (tracing)
			{
    		  printf("TRACING: strstr_in_attr_list is running\n");
			}

		   for( item = list; item != NULL ; item = g_list_next(item) )
		   {
			 word = rpsl_attr_get_clean_value((rpsl_attr_t *)(item->data));
			 g_strup(word);
			 if (strstr(word, substr) == word)
			 {
    		   free(word);
    		   return 1;
			 }
			 free(word);
		   }
		   /* none of them matched, so return 0 */
		   return 0; 
		  }



		  /* Gets a (maintainer) object as a string and returns its 'auth' attributes 
			 as a GList (linked list) */

		  GList *get_auths(char * object_str)
		  {
			bool code;
			const char *name = NULL;
			char *value = NULL;
			GList *attr;
			rpsl_object_t object;
			GList *list_of_auths = NULL;

			if(tracing)
			{
    		  printf("TRACING: get_auths is running\n");
			}

			code = rpsl_object_init(&object, object_str);

			list_of_auths = rpsl_object_get_attr(&object, "auth");

			if(tracing) 
			{
			  if ( rpsl_object_has_error(&object, RPSL_ERRLVL_ERROR) )
			  {
				/* thre was an error during the parsing */
				name = rpsl_object_get_class(&object);
				if ( name )
				{
				  attr = rpsl_object_get_attr(&object, name);
				  if ( attr )
				  {
					value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
					if ( value )
					{
					  printf("TRACING: get_auths: error parsing object %s\n", value );
					  free(value);
					}
					else
					  printf("TRACING: get_auths: error parsing object\n");

					rpsl_attr_delete_list(attr);
				  }
				}
			  }
    		  printf("TRACING: get_auths: returning (with %d nodes)\n", g_list_length(list_of_auths));
			}

			rpsl_object_delete(&object);
			return list_of_auths; 
		  }



		  /* Gets a parsed object and returns its 'attr_type' attributes as a 
			 GList (linked list) */

		  GList *get_attr_list(rpsl_object_t *object, const char *attr_type)
		  {
			GList *list_of_attrs = NULL;
			char *object_str = NULL;

			if (tracing)
			{
    		  object_str = rpsl_object_get_text(object);
    		  printf("TRACING: get_attr_list is running searching for %s, object is \n#%s#\n", attr_type, object_str);
    		  free(object_str);
			}

			list_of_attrs = rpsl_object_get_attr(object, attr_type);

			return list_of_attrs; 
		  }



		  /* Gets a parsed object and returns its mnt_lower attributes as a 
			 GList (linked list) */

		  GList *get_mnt_lowers(rpsl_object_t *object)
		  {
			GList *list_of_mnt_lowers = NULL;

			if (tracing)
			{
    		  printf("TRACING: get_mnt_lowers is running\n");
			}

			list_of_mnt_lowers = rpsl_object_get_attr(object, "mnt-lower");

			return list_of_mnt_lowers; 
		  }


		  /* Gets a parsed object and returns its mnt_routes attributes as a 
			 GList (linked list) */

		  GList *get_mnt_routes(rpsl_object_t *object)
		  {
			GList *list_of_mnt_routes = NULL;

			if (tracing)
			{
    		  printf("TRACING: get_mnt_routes is running\n");
			}

			list_of_mnt_routes = rpsl_object_get_attr(object, "mnt-routes");

			return list_of_mnt_routes; 
		  }


		  /* Gets a linked list of object strings and returns the mnt_routes attribs of
			 them in a linked list */
		  GList *get_mnt_routes_from_list(GList *objects_str)
		  {
			GList *objects_str_item = NULL;
			GList *list_of_mnt_routes = NULL;
			int code;
			const char *name = NULL;
			char *value = NULL;
			GList *attr;
			rpsl_object_t object;

			for ( objects_str_item = objects_str; objects_str_item != NULL ; objects_str_item = g_list_next(objects_str_item) )
			{
			  code = rpsl_object_init(&object, (char *)(objects_str_item->data));

			  if (tracing)
			  {
    			if ( rpsl_object_has_error(&object, RPSL_ERRLVL_ERROR) )
				{
				  /* thre was an error during the parsing */
				  name = rpsl_object_get_class(&object);
				  if ( name )
				  {
					attr = rpsl_object_get_attr(&object, name);
					if ( attr )
					{
		    		  value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
					  if ( value )
					  {
		    			printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
						free(value);
					  }
					  else
		    			printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

					  rpsl_attr_delete_list(attr);
					}
				  }
				}
			  }

    		  list_of_mnt_routes = g_list_concat(list_of_mnt_routes, get_mnt_routes(&object));
    		  rpsl_object_delete(&object);
			}

			return list_of_mnt_routes;
		  }



		  /* Gets a linked list of object strings and returns the mnt_lowers attribs of
			 them in a linked list */
		  GList *get_mnt_lowers_from_list(GList * objects_str)
		  {
			GList *objects_str_item = NULL;
			GList *list_of_mnt_lowers = NULL;
			int code;
			const char *name = NULL;
			char *value = NULL;
			GList *attr;
			rpsl_object_t object;

			for( objects_str_item = objects_str; objects_str_item != NULL ; objects_str_item = g_list_next(objects_str_item) )
			{
			  code = rpsl_object_init(&object, (char *)(objects_str_item->data));

			  if (tracing)
			  {
    			if ( rpsl_object_has_error(&object, RPSL_ERRLVL_ERROR) )
				{
				  /* thre was an error during the parsing */
				  name = rpsl_object_get_class(&object);
				  if ( name )
				  {
					attr = rpsl_object_get_attr(&object, name);
					if ( attr )
					{
		    		  value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
					  if ( value )
					  {
		    			printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
						free(value);
					  }
					  else
		    			printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

					  rpsl_attr_delete_list(attr);
					}
				  }
				}
			  }

    		  list_of_mnt_lowers = g_list_concat(list_of_mnt_lowers, get_mnt_lowers(&object));
    		  rpsl_object_delete(&object);
			}

			return list_of_mnt_lowers;
		  }



		  /* retrieves the override password from the 'override' attribute  
			 of the object. If none, it returns NULL   */
		  char *get_override(rpsl_object_t * object)
		  {
			char *value  = NULL;
			GList *attr_list;

			if(tracing)
			{
    		  printf("TRACING: get_override is running\n");
			}

			attr_list = rpsl_object_get_attr(object, "override");
			if ( ! attr_list )
			{
    		  /* there was no 'override' attrib, so return NULL */
    		  return NULL;
			}

			/* there should only be one item in this list, 
    		   return the clean value of that attribute */
			return rpsl_attr_get_clean_value((rpsl_attr_t *)(attr_list->data));
		  }



		  /* checks override string (password) 
			 returns OVR_OK if it is correct password */
		  int check_override(char * string)
		  {
			 char ** temp;
			 int i;
			 char * crypted_password = strdup(overridecryptedpw);

			 if(string == NULL) 
			 {
    		   if(tracing) 
			   {
    			 printf("TRACING: check_override is returning FAILED\n");
    		   }
			   free (crypted_password);
    		   return UP_OVF; /* override attempt failed */ 
			 }
			 else
			 {
    		  /* split the string */
    		   temp = g_strsplit (string, " ", 0);

    		   for(i=0; temp[i] != NULL; i++)
			   {
    			 if(strlen(temp[i]) != 0)
				 {
        		   if(strcmp(AU_crypt(temp[i], crypted_password), crypted_password) == 0)
				   {
        			 if(tracing) 
					 {
            		   printf("TRACING: check_override is returning OK\n", string);
        			 }
        			 g_strfreev(temp);
					 free (crypted_password);
        			 return OVR_OK; 
        		   }
    			 }
    		   }

    		   /* we couldn't find a word matching the override password */ 
    		   g_strfreev(temp);         
			   free (crypted_password);
    		   return UP_OVF; /* override attempt failed */
			 }
		  }




		  /* takes a GSList of struct auth_struct and a GList of auths, and a mntner name,
			 add new elements to GSList of struct auth_struct and  returns the new
			 GSList of struct auth_struct  */

		  GSList * add_to_auth_vector(GSList * list_of_auth_struct, GList * auths, char * mntner_name)
		  {
			 GList * auth_item;
			 char * auth_attrib = NULL;
			 char * auth_attrib_uppercase = NULL, * argument = NULL;
			 auth_struct * temp = NULL;
			 int index = 1;

			 for(auth_item = auths; auth_item != NULL; auth_item = g_list_next(auth_item))
			 {
    		   auth_attrib = rpsl_attr_get_clean_value((rpsl_attr_t *)(auth_item));
    		   if(tracing)
			   {
    			 printf("TRACING: add_to_auth_vector: %s\n", auth_attrib);
    		   }
    		   /* Take the auth attribute and convert it into uppercase for comparisons */
    		   auth_attrib_uppercase = strdup(auth_attrib);
    		   g_strup(auth_attrib_uppercase);

    		   if ( strstr(auth_attrib_uppercase,"CRYPT-PW") == auth_attrib_uppercase )
			   {
    			 /* take the argument of the auth attribute */
    			 argument = strdup(auth_attrib + strlen("CRYPT-PW"));
    			 g_strstrip(argument);
    			 if(tracing) 
				 {
        		   printf("TRACING: add_to_auth_vector: adding new argument: %s\n", argument);
    			 }
    			 temp = (auth_struct *)malloc(sizeof(auth_struct));
    			 temp->type = AU_CRYPT_PW;
    			 temp->auth = argument;
    			 temp->mntner_name = mntner_name;
    			 temp->index = index++;
    			 list_of_auth_struct = g_slist_append(list_of_auth_struct, temp);
    		   }
			   else if (strstr(auth_attrib_uppercase,"MAIL-FROM") == auth_attrib_uppercase)
			   {
    			 /* take the argument of the auth attribute */
    			 argument = strdup(auth_attrib + strlen("MAIL-FROM"));
    			 g_strstrip(argument);
    			 if(tracing)
				 {
        		   printf("TRACING: add_to_auth_vector: adding new argument: %s\n", argument);
    			 }
    			 temp = (auth_struct *)malloc(sizeof(auth_struct));
    			 temp->type = AU_MAIL_FROM;
    			 temp->auth = argument;
    			 temp->mntner_name = mntner_name;
    			 temp->index = index++;
    			 list_of_auth_struct = g_slist_append(list_of_auth_struct, temp);
    		   }
			   else if (strstr(auth_attrib_uppercase,"NONE") == auth_attrib_uppercase)
			   {
    			 /* take the argument of the auth attribute */
    			 temp = (auth_struct *)malloc(sizeof(auth_struct));
    			 temp->type = AU_NONE;
    			 temp->auth = NULL;
    			 temp->mntner_name = mntner_name;
    			 temp->index = index++;
    			 list_of_auth_struct = g_slist_append(list_of_auth_struct, temp);
    		  }
			  else if (strstr(auth_attrib_uppercase,"PGPKEY-") == auth_attrib_uppercase)
			  {
    			 argument = strdup(auth_attrib + strlen("PGPKEY-"));
    			 g_strstrip(argument);
    			 if(tracing)
				 {
        		   printf("TRACING: add_to_auth_vector: adding new argument: %s\n", argument);
    			 }
    			 temp = (auth_struct *)malloc(sizeof(auth_struct));
    			 temp->type = AU_PGP;
    			 temp->mntner_name = mntner_name;
    			 temp->index = index++;
    			 temp->auth = argument;
    			 list_of_auth_struct = g_slist_append(list_of_auth_struct, temp);
    		   }
			   else
			   {
    			 if (tracing)
				 {
        		   printf("TRACING: Error: invalid auth attrib: %s\n", auth_attrib);
    			 }
    			 return NULL;
    		   }

    		   free(auth_attrib_uppercase);
    		   free(auth_attrib); 
			 }

			 return list_of_auth_struct;
		  }




		  /* Gets a list of mntner names, retrieves those mntners from
			 the database and extracts the 'auth' attributes, and
			 constructs the authorisation vector, which is a GSList of
			 struct auth_struct */

		  GSList * get_auth_vector(GList * mntners)
		  {
			GList * list_of_auths = NULL;
			GList * mntner_item = NULL;
			GSList * to_be_returned = NULL;
			char * query_string = NULL, * result = NULL, * object_str = NULL;
			char *value;

			for( mntner_item = mntners; mntner_item != NULL ; mntner_item = g_list_next(mntner_item) )
			{
    		  value = rpsl_attr_get_clean_value((rpsl_attr_t *)(mntner_item->data));
    		  if(tracing) 
			  {
    			printf("=====\nget_auth_vector: Got a mntner\n%s\n", value  );
    		  }
    		  query_string = (char *)malloc(strlen("-Tmntner -r ")+strlen(value)+1);
    		  sprintf(query_string, "-Tmntner -r %s",value);
    		  result = send_and_get(query_host, query_port, query_string);
			  free(query_string);
    		  if(count_objects(result) == 0)
			  {
    			/* no such maintainer */
    			if(tracing)
				{
        		  printf("get_auth_vector: No such maintainer %s\n", value);
    			}
				free(result);
				free(value);
    			return NULL;
    		  }
			  else if (count_objects(result) > 1)
			  {
    			if(tracing)
				{
        		  printf("get_auth_vector: More than one objects returned\n");
    			}
    		  }
			  else
			  { /* count_objects(result) == 1 */
    			object_str = take_object(result);
    			if(tracing)
				{
        		  printf("TRACING: get_auth_vector: Calling get_auths(char *)\n");
    			}

    			list_of_auths = get_auths(object_str);
    			if(tracing)
				{
        		  printf("TRACING: get_auth_vector: get_auths(char *) returned (with %d nodes)\n", g_list_length(list_of_auths)) ;
    			}

    			/* add this to the auth_vector. ( mntner_item->data->value is the name of the maintainer  ) */
    			to_be_returned = add_to_auth_vector(to_be_returned, list_of_auths, (char *)value);
    			if(tracing)
				{
    			 printf("TRACING: get_auth_vector: to_be_returned has now %d nodes\n",  g_slist_length(to_be_returned));
    			}

				rpsl_attr_delete_list(list_of_auths);
    		  }
			  free(value);
			  free(result);
			}

			if(tracing) 
			{  
    		  printf("TRACING: get_auth_vector: to_be_returned has %i nodes\n", g_slist_length(to_be_returned)); 
			}
			return to_be_returned; 
		  }




		  /* Gets a list of mntner names, retrieves those mntners from
			 the database and extracts the 'mnt-nfy' attributes, and
			 returns them as a GList */

		  GList * get_mntnfy_vector(GList *mntners)
		  {
			GList * list_of_mntnfy = NULL;
			GList * mntner_item = NULL;
			GList * temp;
			const GList * error_list = NULL;
			/* GList * to_be_returned = NULL; */
			char * query_string = NULL, * result = NULL, * object_str = NULL;
			char *value;
			rpsl_object_t object;
			int code;

			for ( mntner_item = mntners; mntner_item != NULL ; mntner_item = g_list_next(mntner_item) )
			{
			  value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(mntner_item->data) );
    		  if (tracing)
			  {
    			printf( "=====\nGot a mntner\n%s\n", value );
    		  }
    		  query_string = (char *)malloc(strlen("-Tmntner -r ")+strlen(value)+1);
    		  sprintf(query_string, "-Tmntner -r %s", value);
    		  result = send_and_get(query_host, query_port, query_string);
			  free(query_string);
    		  if (count_objects(result) == 0)
			  {
    			/* no such maintainer */
    			if(tracing)
				{
        		  printf("get_mntnfy_vector: No such maintainer %s\n", value);
    			}
    		  }
			  else if (count_objects(result) > 1)
			  {
    			if (tracing)
				{
        		  printf("get_mntnfy_vector: More than one objects returned for maintainer %s\n", value);
    			}
    		  }
			  else
			  { /* count_objects(result) == 1 */
    			object_str = take_object(result);
				code = rpsl_object_init(&object, object_str);
				error_list = rpsl_object_errors(&object);

    			if (tracing)
				{
        		  printf("TRACING: get_mntnfy_vector: Calling get_attr_list\n");
    			}

    			temp = get_attr_list(&object, "mnt-nfy");

    			if (tracing)
				{
        		  printf("TRACING: get_mntnfy_vector: get_attr_list returned (with %i nodes)\n", g_list_length(temp));
    			}

    			list_of_mntnfy = g_list_concat(list_of_mntnfy, temp);

    			if (tracing)
				{
        		  printf("TRACING: get_mntnfy_vector: list_of_mntnfy has now %i nodes\n", g_list_length(list_of_mntnfy));
    			}
    			rpsl_object_delete(&object);
    		  }
			  free(value);
			  free(result);
			}

			if (tracing)
			{  
    		  printf("TRACING: get_mntnfy_vector: list_of_mntnfy has %i nodes\n", g_list_length(list_of_mntnfy)); 
			}
			return list_of_mntnfy; 
		  }



		  /* Gets a list of mntner names, retrieves those mntners from
			 the database and extracts the 'upd-to' attributes, and
			 returns them as a GList */

		  GList * get_updto_vector(GList * mntners)
		  {
			GList * list_of_updto = NULL;
			GList * mntner_item = NULL;
			char * query_string = NULL, * result = NULL, * object_str = NULL;
			GList * temp;
			const GList * error_list = NULL;
			char *value;
			rpsl_object_t object;
			int code;

			for ( mntner_item = mntners; mntner_item != NULL ; mntner_item = g_list_next(mntner_item) )
			{
			  value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(mntner_item->data) );
    		  if (tracing)
			  {
    			printf( "=====\nGot a mntner\n%s\n", value );
    		  }
    		  query_string = (char *)malloc(strlen("-Tmntner -r ")+strlen(value)+1);
    		  sprintf(query_string, "-Tmntner -r %s", value);
    		  result = send_and_get(query_host, query_port, query_string);
    		  if (count_objects(result) == 0)
			  {
    			/* no such maintainer */
    			if(tracing)
				{
        		  printf("get_updto_vector: No such maintainer %s\n", value);
    			}
    		  }
			  else if(count_objects(result) > 1)
			  {
    			if (tracing)
				{
        		  printf("get_updto_vector: More than one objects returned for maintainer %s\n", value);
    			}
    		  }
			  else
			  { /* count_objects(result) == 1 */
    			object_str = take_object(result);
				code = rpsl_object_init(&object, object_str);
				error_list = rpsl_object_errors(&object);

    			if (tracing)
				{
        		  printf("TRACING: get_updto_vector: Calling get_attr_list\n");
    			}

    			temp = get_attr_list(&object, "upd-to");

    			if (tracing)
				{
        		  printf("TRACING: get_updto_vector: get_attr_list returned (with %i nodes)\n", g_list_length(temp));
    			}

    			list_of_updto = g_list_concat(list_of_updto, temp);

    			if (tracing)
				{
        		  printf("TRACING: get_updto_vector: list_of_mntnfy has now %i nodes\n",  g_list_length(list_of_updto));
    			}
    			rpsl_object_delete(&object);
    		  }
			  free(value);
			  free(result);
			}

			if (tracing)
			{  
    		  printf("TRACING: get_updto_vector: list_of_updto has %i nodes\n", g_list_length(list_of_updto)); 
			}
			return list_of_updto; 
		  }




		  /* gets one or more route objects filters out the ones which don't have the same
			 origin as 'char * origin' argument */
		  char * up_filter_out_diff_origins(char * objects_str, char * origin)
		  {
			GList * object_str_list = NULL, * object_str_item =NULL;
			const GList *error_list = NULL; 
			char * objects_to_be_returned = NULL;
			char * key = NULL;
			int code;
			rpsl_object_t object;

			if (tracing) 
			{
    		  printf("TRACING: up_filter_out_diff_origins\n");
			}

			/* strip the lines beginning with '%' off */
			objects_str = strip_lines(objects_str);

			/* separate the objects, store them in a linked list */
			object_str_list = take_objects(objects_str);

			for (object_str_item = object_str_list; object_str_item != NULL; object_str_item = g_list_next(object_str_item))
			{
    		  code = rpsl_object_init(&object, (char *)(object_str_item->data));
			  error_list = rpsl_object_errors(&object);
    		  key = get_search_key(&object, "origin");
    		  if (key != NULL && strcasecmp(g_strstrip(origin), key) == 0)
			  {
    			if (objects_to_be_returned == NULL)
				{
        		  objects_to_be_returned = strdup((char *)(object_str_item->data));
    			}
				else
				{
        		  objects_to_be_returned = (char *)realloc(objects_to_be_returned, 
                    			strlen(objects_to_be_returned) + strlen((char *)(object_str_item->data)) + 2);
        		  objects_to_be_returned = strcat(objects_to_be_returned, "\n");
        		  objects_to_be_returned = strcat(objects_to_be_returned, (char *)(object_str_item->data));
    			}
    		  }
    		  rpsl_object_delete(&object);
			  free(key);
			}

			if(tracing) 
			{
    			printf("TRACING: up_filter_out_diff_origins: returning:\n%s\n", objects_to_be_returned ? objects_to_be_returned : "(NULL)");
			}

			return objects_to_be_returned; 
		  }



		  /* gets one or more person/role objects filters out the ones which don't have the same
			 nic_hdl as 'char * nic_hdl' argument */
		  char * up_filter_out_diff_nichdls(char * objects_str, char * nic_hdl)
		  {
			GList * object_str_list = NULL, * object_str_item =NULL;
			char * objects_to_be_returned = NULL;
			int code = 0;
			char * key = NULL;
			rpsl_object_t *object;

			if (tracing)
			{
    		  printf("TRACING: up_filter_out_diff_nichdls\n");
			}

			/* strip the lines beginning with '%' off */
			objects_str = strip_lines(objects_str);

			/* separate the objects strings, store them in a linked list */
			object_str_list = take_objects(objects_str);

			for (object_str_item = object_str_list; object_str_item != NULL; object_str_item = g_list_next(object_str_item))
			{
			  object = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
    		  code = rpsl_object_init(object, (char *)(object_str_item->data));
    		  key = get_search_key(object, "nic-hdl");
    		  if (key != NULL && strcasecmp(g_strstrip(nic_hdl), key) == 0)
			  {
    			if (objects_to_be_returned == NULL)
				{
        		  objects_to_be_returned = strdup((char *)(object_str_item->data));
    			}
				else
				{
        		  objects_to_be_returned = (char *)realloc(objects_to_be_returned, 
                    			strlen(objects_to_be_returned) + strlen((char *)(object_str_item->data)) + 2);
        		  objects_to_be_returned = strcat(objects_to_be_returned, "\n");
        		  objects_to_be_returned = strcat(objects_to_be_returned, (char *)(object_str_item->data));
    			}
    		  }
    		  rpsl_object_delete(object);
			}

			if(tracing)
			{
    			printf("TRACING: up_filter_out_diff_nichdls: returning:\n%s\n", objects_to_be_returned ? objects_to_be_returned :"(NULL)");
			}

			return objects_to_be_returned; 
		  }



		  /* gets one or more route objects, filters out the ones which have the same
			 origin as 'char * origin' argument */
		  char * UP_filter_out_same_origins(char * objects_str, rpsl_object_t * object)
		  {
			GList * object_list = NULL, * object_item =NULL;
			const GList *error_list = NULL; 
			char * objects_to_be_returned = NULL;
			char * key = NULL;
			rpsl_object_t  obj;
			int code;
			char * origin;

			if (tracing)
			{
    		  printf("TRACING: UP_filter_out_same_origins\n");
			}

			origin = get_search_key(object, "origin");

			/* strip the lines beginning with '%' off */
			objects_str = strip_lines(objects_str);

			/* separate the objects, store them in a linked list */
			object_list = take_objects(objects_str);

			for (object_item = object_list; object_item != NULL; object_item = g_list_next(object_item))
			{
    		  code = rpsl_object_init(&obj, (char *)(object_item->data));
			  error_list = rpsl_object_errors(&obj);

    		  key = get_search_key(&obj, "origin");
    		  if (key != NULL && strcasecmp(g_strstrip(origin), key) != 0)
			  {
    			if (objects_to_be_returned == NULL)
				{
        		  objects_to_be_returned = strdup((char *)(object_item->data));
    			}
				else
				{
        		  objects_to_be_returned = (char *)realloc(objects_to_be_returned, 
                    			strlen(objects_to_be_returned) + strlen((char *)(object_item->data)) + 2);
        		  objects_to_be_returned = strcat(objects_to_be_returned, "\n");
        		  objects_to_be_returned = strcat(objects_to_be_returned, (char *)(object_item->data));
    			}
    		  }
			  rpsl_object_delete(&obj);
			}

			if (tracing)
			{
    			printf("TRACING: up_filter_out_same_origins: returning:\n%s\n", objects_to_be_returned ? objects_to_be_returned : "(NULL)");
			}

			return objects_to_be_returned; 
		  }




		  /* Check authorisation
			 Applies authorisation rules according to the object type 

			 Arguments:
    			char *new_object: the new object,
    			char *old_object: the old object, as found in the database,
    			char *type: type of the object
    			credentials_struct credentials: a struct which
        		  contains credentials of the update, such as 'From:' field of
        		  the e-mail header and passwords in the update   */

		  int check_auth(rpsl_object_t *new_object, rpsl_object_t *old_object, const char *type, credentials_struct credentials)
		  {
			 GList *old_mntners = NULL, *new_mntners = NULL;
			 GList *old_auths = NULL, *new_auths = NULL;
			 GList *as_block_mnt_lowers = NULL;
			 GSList *old_auth_vector = NULL, *new_auth_vector = NULL;
			 GSList *as_block_auth_vector = NULL;
			 GSList *less_specific_auth_vector = NULL;
			 GList *less_specific_mnt_lowers = NULL;
			 GList *less_specific_mntners = NULL;
			 GList *aut_num_maintainers = NULL;
			 GSList *aut_num_auth_vector = NULL;
			 GList *exact_match_routes_str = NULL;  
			 GList *exact_match_routes_maintainers = NULL;
			 GSList *exact_match_routes_auth_vector = NULL;
			 GList *less_spec_routes_str = NULL;
			 GList *less_spec_routes_mntners = NULL;
			 GSList *less_spec_routes_auth_vector = NULL;
			 GList *exact_match_inetnum_mnt_routes = NULL;
			 GSList *exact_match_inetnum_auth_vector = NULL;
			 GList *less_spec_inetnum_mntners = NULL;
			 GSList *less_spec_inetnum_auth_vector = NULL;
			 GSList *exact_match_intenum_auth_vector = NULL;
			 GSList *exact_match_auth_vector = NULL;

			 GList *old_name = NULL;
			 GList *new_name = NULL;
			 GList *attr;
			 const GList *error_list = NULL;

			 char *as_block_object_str = NULL;
			 char *less_specific_object_str = NULL;
			 char *less_specific_domain_str = NULL;
			 char *less_spec_inetnum_str = NULL;
			 char *exact_match_inetnum_str = NULL;
			 const char *less_specific_object_type = NULL;
			 char *override_string = NULL;
			 char *set_name = NULL;
			 char * aut_num_object_str = NULL;
			 char * name_old = NULL;
			 char * name_new = NULL;
			 const char *name;
			 bool aut_num_auth_OK = false;

			 int code;
			 int auth_return;
			 char *value;

			 rpsl_object_t *as_block_obj = NULL;
			 rpsl_object_t *less_specific_obj = NULL;
			 rpsl_object_t *less_specific_domain_obj = NULL;
			 rpsl_object_t *aut_num_obj = NULL;
			 rpsl_object_t *exact_match_inetnum_obj = NULL;
			 rpsl_object_t *less_spec_inetnum_obj = NULL;

			 int overriden = 0;

			 /* first check if it is overriden or not. if overriden, check the override
    			password. If it is correct, continue, setting "overriden" to 1. If not,   
    			immediately exit returning ERR_UP_OVF                                   */
			 override_string = get_override((new_object == NULL) ? old_object : new_object );
			 if(override_string == NULL)
			 { 
    		   overriden = 0;
			 }
			 else if ( check_override(override_string) == OVR_OK )
			 {
    		   overriden = 1; /* authorisation is overriden */
    		   free(override_string);
			   override_string = NULL;
			 }
			 else
			 {
    		   free(override_string);
			   override_string = NULL;
    		   return UP_OVF; /* override failed! */
			 }


			 /*  
    		  *  Handle the "person", "role", "limerick", "inet-rtr", "key-cert" types 
    		  */
			 if(strcmp(type,"person")   == 0 || strcmp(type,"role")     == 0 ||
    			strcmp(type,"limerick") == 0 || strcmp(type,"inet-rtr") == 0 ||
    			strcmp(type,"key-cert") == 0 )
			 {
    		   if( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 new_mntners = get_mntners(new_object);
    			 new_auth_vector = get_auth_vector(new_mntners);
    			 if(new_mntners != NULL && new_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'new_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(new_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(new_auth_vector, credentials, overriden);
				 free(new_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 /* check name change of person/role */
    			 if ( strcmp(type,"person") == 0 || strcmp(type,"role") == 0 )
				 {
        		   old_name = get_attr_list(old_object, type);
        		   new_name = get_attr_list(new_object, type);

        		   if(old_name != NULL && new_name != NULL
            		   && g_list_nth(old_name, 0) != NULL && g_list_nth(new_name, 0) != NULL
            		   && (g_list_nth(old_name, 0)->data) != NULL
            		   && (g_list_nth(new_name, 0)->data) != NULL)
        		   {

        			 name_old = rpsl_attr_get_clean_value((rpsl_attr_t *)(g_list_nth(old_name, 0)->data));
        			 name_new = rpsl_attr_get_clean_value((rpsl_attr_t *)(g_list_nth(new_name, 0)->data));
					 rpsl_attr_delete_list(old_name);
					 rpsl_attr_delete_list(new_name);

        			 if ( strcmp(name_old, name_new) )
					 {
            		   free(name_old); free(name_new);
            		   return UP_NAM; /* name of a person/role object can't be changed */
        			 }
        			 free(name_old);free(name_new);
        		   }
				   else
				   {
					 rpsl_attr_delete_list(old_name);
					 rpsl_attr_delete_list(new_name);
        			 return UP_INT; /* there was a problem with obtaining the name of person obj */
        		   }
    			 }

    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { // both are NULL, mustn't happen
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }
			 }

			 /*  
    		  *  Handle the "aut-num" type 
    		  */
			 else if (strcmp(type,"aut-num")  == 0 )
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 as_block_object_str = get_as_block(new_object);
    			 if (as_block_object_str == NULL )
				 {
        		   return UP_ABN; /* As-block does not exist */
    			 } 
				 else
				 {
	    		   as_block_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
	    		   code = rpsl_object_init(as_block_obj, as_block_object_str);
				   if (tracing)
				   {
    				 if ( rpsl_object_has_error(as_block_obj, RPSL_ERRLVL_ERROR) )
					 {
					   /* thre was an error during the parsing */
					   name = rpsl_object_get_class(as_block_obj);
					   if ( name )
					   {
						 attr = rpsl_object_get_attr(as_block_obj, name);
						 if ( attr )
						 {
		    			   value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
						   if ( value )
						   {
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing as_block object %s\n", value );
							 free(value);
						   }
						   else
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing as_block object\n");

						   rpsl_attr_delete_list(attr);
						 }
					   }
					 }
				   }

        		   as_block_mnt_lowers = get_mnt_lowers(as_block_obj);
        		   as_block_auth_vector = get_auth_vector(as_block_mnt_lowers);
				   rpsl_object_delete(as_block_obj);
				   free(as_block_obj);
        		   if (as_block_mnt_lowers != NULL && as_block_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'as_block_mnt_lowers' do not exist. Problem. */
					 rpsl_attr_delete_list(as_block_mnt_lowers);
        			 return UP_AUF; /* auth failed */
        		   }
        		   if (authorise(as_block_auth_vector, credentials, overriden) == UP_AUTH_OK )
				   {
        			 new_mntners = get_mntners(new_object);
        			 new_auth_vector = get_auth_vector(new_mntners);
        			 if(new_mntners != NULL && new_auth_vector == NULL)
					 {
            		   /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
		    		   rpsl_attr_delete_list(new_mntners);
            		   return UP_AUF; /* auth failed */
        			 }
        			 auth_return = authorise(new_auth_vector, credentials, overriden);
	    			 free(new_auth_vector);
	    			 return auth_return;
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical auth failed */
        		   }
    			 }
    		   }
			   else if( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { /* both are NULL, mustn't happen */
        		   if(tracing) 
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   } 
        		   return UP_INT; /* internal error */
    		   }
			 } 

			 /*  
    		  *  Handle the "mntner/as-block" types 
    		  */
			 else if (strcmp(type,"mntner")  == 0 || strcmp(type,"as-block")  == 0 )
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 if (overriden || test_mode)
				 {
        		   return UP_AUTH_OK; 
    			 }
				 else
				 { /* If not overriden, must be forwarded to <HUMAILBOX> */
        		   if (tracing) 
				   {
        			 printf("TRACING: check_auth: '%s' creation requested\n", type);
        		   }
        		   return UP_FWD; /* must be forwarded to <HUMAILBOX> */
    			 }
    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { // both are NULL, mustn't happen
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }
			 }

			 /*  
    		  *  Handle the "inetnum/inet6num" types 
    		  */
			 else if (strcmp(type,"inetnum")  == 0 || strcmp(type,"inet6num")  == 0 )
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 less_specific_object_str = get_less_specific(new_object, type);
    			 if (less_specific_object_str == NULL)
				 {
        		   if (overriden)
				   {
        			 return UP_AUTH_OK; 
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			 }
				 else
				 { /* if we got an inet(6)num object */
	    		   less_specific_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
	    		   code = rpsl_object_init(less_specific_obj, less_specific_object_str);
	    		   error_list = rpsl_object_errors(less_specific_obj);
				   if (tracing)
				   {
    				 if ( rpsl_object_has_error(less_specific_obj, RPSL_ERRLVL_ERROR) )
					 {
					   /* thre was an error during the parsing */
					   name = rpsl_object_get_class(less_specific_obj);
					   if ( name )
					   {
						 attr = rpsl_object_get_attr(less_specific_obj, name);
						 if ( attr )
						 {
		    			   value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
						   if ( value )
						   {
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
							 free(value);
						   }
						   else
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

						   rpsl_attr_delete_list(attr);
						 }
					   }
					 }
				   }

        		   less_specific_mnt_lowers = get_mnt_lowers(less_specific_obj);
        		   less_specific_auth_vector = get_auth_vector(less_specific_mnt_lowers);
				   rpsl_object_delete(less_specific_obj);
				   free(less_specific_obj);

        		   if (less_specific_mnt_lowers != NULL && less_specific_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'less_specific_mnt_lowers' do not exist. Problem. */
					 rpsl_attr_delete_list(less_specific_mnt_lowers);
        			 return UP_AUF; /* auth failed */
        		   }
        		   if (authorise(less_specific_auth_vector, credentials, overriden) == UP_AUTH_OK)
				   {
        			 new_mntners = get_mntners(new_object);
        			 new_auth_vector = get_auth_vector(new_mntners);
        			 if (new_mntners != NULL && new_auth_vector == NULL)
					 {
            		   /* then, the mntners in 'new_mntners' do not exist. Problem. */
		    		   rpsl_attr_delete_list(new_mntners);
            		   return UP_AUF; /* auth failed */
        			 }
        			 auth_return = authorise(new_auth_vector, credentials, overriden);
	    			 free(new_auth_vector);
	    			 return auth_return;
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			 }
    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { /* both are NULL, mustn't happen */
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }
			 }

			 /*  
    		  *  Handle the "domain" type 
    		  */
			 else if (strcmp(type,"domain")  == 0)
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 /* now, we have to find a 'less specific domain object' for this. 
        			If there is no less specific object, then creation is possible
        			only with overriding. */
    			less_specific_domain_str = get_less_specific_domain(new_object);
    			if (less_specific_domain_str == NULL)
				{
        		  if (overriden)
				  {/* we didn't get a 'less specific' domain object */
        			 return UP_AUTH_OK; 
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			}
				else
				{ /* we get a 'less specific' domain object */
        		   less_specific_domain_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
	    		   code = rpsl_object_init(less_specific_domain_obj, less_specific_domain_str);
				   if (tracing)
				   {
    				 if ( rpsl_object_has_error(less_specific_domain_obj, RPSL_ERRLVL_ERROR) )
					 {
					   /* thre was an error during the parsing */
					   name = rpsl_object_get_class(less_specific_domain_obj);
					   if ( name )
					   {
						 attr = rpsl_object_get_attr(less_specific_domain_obj, name);
						 if ( attr )
						 {
		    			   value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
						   if ( value )
						   {
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
							 free(value);
						   }
						   else
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

						   rpsl_attr_delete_list(attr);
						 }
					   }
					 }
				   }

        		   less_specific_mnt_lowers = get_mnt_lowers(less_specific_domain_obj);
        		   less_specific_auth_vector = get_auth_vector(less_specific_mnt_lowers);
        		   rpsl_object_delete(less_specific_domain_obj);
				   free(less_specific_domain_obj);

        		   if (less_specific_mnt_lowers != NULL && less_specific_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'less_specific_mnt_lowers' do not exist. Problem. */
					 rpsl_attr_delete_list(less_specific_mnt_lowers);
        			 return UP_AUF; /* auth failed */
        		   }
        		   if (authorise(less_specific_auth_vector, credentials, overriden) == UP_AUTH_OK)
				   {
        			 new_mntners = get_mntners(new_object);
        			 new_auth_vector = get_auth_vector(new_mntners);
        			 if (new_mntners != NULL && new_auth_vector == NULL)
					 {
            		   /* then, the mntners in 'new_mntners' do not exist. Problem. */
		    		   rpsl_attr_delete_list(new_mntners);
            		   return UP_AUF; /* auth failed */
        			 }
        			 auth_return = authorise(new_auth_vector, credentials, overriden);
	    			 free(new_auth_vector);
	    			 return auth_return;
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			}
    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { /* both are NULL, mustn't happen */
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }
			 }


			 /*  
    		  *  Handle the "route" type 
    		  */
			 else if (strcmp(type,"route")  == 0)
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_mntners' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   } 
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
    			 /* first we have to find the aut-num object mentioned in the 
        			origin attribute */

    			 aut_num_object_str = get_aut_num_object(new_object); 
    			 if (aut_num_object_str == NULL)
				 {
        		   if (overriden)
				   {
        			 return UP_AUTH_OK; 
        		   }
				   else
				   {
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			 }
				 else
				 { /* there is a corresponding aut-num in the db */
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: will try to authorise the route using aut-num\n");
        		   }
	    		   aut_num_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
	    		   code = rpsl_object_init(aut_num_obj, aut_num_object_str);
				   if (tracing)
				   {
    				 if ( rpsl_object_has_error(aut_num_obj, RPSL_ERRLVL_ERROR) )
					 {
					   /* thre was an error during the parsing */
					   name = rpsl_object_get_class(aut_num_obj);
					   if ( name )
					   {
						 attr = rpsl_object_get_attr(aut_num_obj, name);
						 if ( attr )
						 {
		    			   value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
						   if ( value )
						   {
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
							 free(value);
						   }
						   else
		    				 printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

						   rpsl_attr_delete_list(attr);
						 }
					   }
					 }
				   }

        		   aut_num_maintainers = get_mnt_routes(aut_num_obj);
        		   if (aut_num_maintainers != NULL)
				   {
        			 aut_num_auth_vector = get_auth_vector(aut_num_maintainers);
        			 if (authorise(aut_num_auth_vector, credentials, overriden) == UP_AUTH_OK)
					 {
            		   aut_num_auth_OK = true;
        			 }
					 else
					 {/* authorise(aut_num_auth_vector, credentials, overriden) != UP_AUTH_OK */
		    		   rpsl_attr_delete_list(aut_num_maintainers);
            		   return UP_HOF;
        			 }
        		   }
				   else
				   {/* aut_num_maintainers is NULL */
            		  aut_num_maintainers = get_mnt_lowers(aut_num_obj);
            		  if (aut_num_maintainers != NULL)
					  {
            			aut_num_auth_vector = get_auth_vector(aut_num_maintainers);
            			if (authorise(aut_num_auth_vector, credentials, overriden) == UP_AUTH_OK)
						{
                		  aut_num_auth_OK = TRUE;
            			}
						else
						{/* authorise(aut_num_auth_vector, credentials, overriden) != UP_AUTH_OK */
		        		  rpsl_attr_delete_list(aut_num_maintainers);
                		  return UP_HOF; /* hierarchical authorisation failed */
            			}
            		  }
					  else
					  {/* aut_num_maintainers is NULL */
            			aut_num_maintainers = get_mntners(aut_num_obj);
            			if (aut_num_maintainers != NULL)
						{
                		  aut_num_auth_vector = get_auth_vector(aut_num_maintainers);
                		  if (authorise(aut_num_auth_vector, credentials, overriden) == UP_AUTH_OK)
						  {
                			aut_num_auth_OK = TRUE;
                		  }
						  else
						  {/* authorise(aut_num_auth_vector, credentials, overriden) != UP_AUTH_OK */
		        			rpsl_attr_delete_list(aut_num_maintainers);
                			return UP_HOF; /* hierarchical authorisation failed */
                		  }
            			}
						else
						{/* aut_num_maintainers is NULL */
                		  aut_num_auth_OK = TRUE;
            			}

            		  }
        		   }
        		   rpsl_object_delete(aut_num_obj);
				   free(aut_num_obj);

        		   if (aut_num_auth_OK)
				   {
        			 /* now, we have to find an exact match for this route object. 
            			If there is no exact match object, then we will go on to find
            			less specific. */
        			 exact_match_routes_str = get_exact_match_routes(new_object);
        			 if (exact_match_routes_str != NULL)
					 {
            		   exact_match_routes_maintainers = get_mnt_routes_from_list(exact_match_routes_str);
            		   exact_match_routes_auth_vector = get_auth_vector(exact_match_routes_maintainers);
            		   if (exact_match_routes_maintainers != NULL && exact_match_routes_auth_vector == NULL)
					   {
            			 /* then, the mntners in 'exact_match_routes_maintainers' do not exist. Problem. */
		    			 rpsl_attr_delete_list(exact_match_routes_maintainers);
            			 return UP_AUF; /* auth failed */
            		   }
            		   if (authorise(exact_match_routes_auth_vector, credentials, overriden) == UP_AUTH_OK)
					   {
            			 /* then, check mnt_bys of the route itself */
            			 new_mntners = get_mntners(new_object);
            			 new_auth_vector = get_auth_vector(new_mntners);
            			 if (new_mntners != NULL && new_auth_vector == NULL)
						 {
                		   /* then, the mntners in 'new_mntners' do not exist. Problem. */
		        		   rpsl_attr_delete_list(new_mntners);
                		   return UP_AUF; /* auth failed */
            			 }
            			 auth_return = authorise(new_auth_vector, credentials, overriden);
	        			 free(new_auth_vector);
	        			 return auth_return;
            		   }
					   else
					   { /*authorise(exact_match_routes_auth_vector, credentials, overriden) != UP_AUTH_OK*/
            			 return UP_HOF; /* hierarchical authorisation failed */
            		   }
        			 }
					 else
					 { /* exact_match_routes == NULL */
            		   /* then we have to look for less specific route objs */
            		   less_spec_routes_str = get_less_spec_routes(new_object);
            		   if (less_spec_routes_str != NULL)
					   {
            			 less_spec_routes_mntners = get_mnt_routes_from_list(less_spec_routes_str);
            			 less_spec_routes_mntners = g_list_concat(less_spec_routes_mntners, 
                                            		   get_mnt_lowers_from_list(less_spec_routes_str));
            			 less_spec_routes_auth_vector = get_auth_vector(less_spec_routes_mntners);
            			 if (less_spec_routes_mntners != NULL && less_spec_routes_auth_vector == NULL)
						 {
                		   /* then, the mntners in 'less_spec_routes_mntners' do not exist. Problem. */
		        		   rpsl_attr_delete_list(less_spec_routes_mntners);
                		   return UP_AUF; /* auth failed */
            			 }
            			 if (authorise(less_spec_routes_auth_vector, credentials, overriden) == UP_AUTH_OK)
						 {
                		   /* then, check mnt_bys of the route itself */
                		   new_mntners = get_mntners(new_object);
                		   new_auth_vector = get_auth_vector(new_mntners);
                		   if (new_mntners != NULL && new_auth_vector == NULL)
						   {
                			 /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
		        			 rpsl_attr_delete_list(new_mntners);
                			 return UP_AUF; /* auth failed */
                		   }
                		   auth_return = authorise(new_auth_vector, credentials, overriden);
	            		   free(new_auth_vector);
	            		   return auth_return;
            			 }
						 else
						 { /*authorise(less_spec_routes_auth_vector, credentials, overriden) != UP_AUTH_OK*/
                		   return UP_HOF; /* hierarchical authorisation failed */
            			 }
            		   }
					   else
					   {  /* less_spec_routes == NULL */
            			 /* so, we have to get the exact match inetnum */
            			 exact_match_inetnum_str = get_exact_match_inetnum(new_object);
            			 if (exact_match_inetnum_str != NULL)
						 {
	            		   exact_match_inetnum_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
						   code = rpsl_object_init(exact_match_inetnum_obj, exact_match_inetnum_str);
						   if (tracing)
						   {
    						 if ( rpsl_object_has_error(exact_match_inetnum_obj, RPSL_ERRLVL_ERROR) )
							 {
							   /* thre was an error during the parsing */
							   name = rpsl_object_get_class(exact_match_inetnum_obj);
							   if ( name )
							   {
								 attr = rpsl_object_get_attr(exact_match_inetnum_obj, name);
								 if ( attr )
								 {
		    					   value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
								   if ( value )
								   {
		    						 printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
									 free(value);
								   }
								   else
		    						 printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

								   rpsl_attr_delete_list(attr);
								 }
							   }
							 }
						   }

                		   exact_match_inetnum_mnt_routes = get_mnt_routes(exact_match_inetnum_obj);
                		   exact_match_inetnum_auth_vector = get_auth_vector(exact_match_inetnum_mnt_routes);
						   rpsl_object_delete(exact_match_inetnum_obj);
						   free(exact_match_inetnum_obj);

                		   if (exact_match_inetnum_mnt_routes != NULL && exact_match_inetnum_auth_vector == NULL)
						   {
                			 /* then, the mntners in 'exact_match_inetnum_mnt_routes' do not exist. Problem. */
		        			 rpsl_attr_delete_list(exact_match_inetnum_mnt_routes);
                			 return UP_AUF; /* auth failed */
                		   }
                		   if (authorise(exact_match_intenum_auth_vector, credentials, overriden) == UP_AUTH_OK)
						   {
                			 /* then, check mnt_bys of the route itself */
                			 new_mntners = get_mntners(new_object);
                			 new_auth_vector = get_auth_vector(new_mntners);
                			 if (new_mntners != NULL && new_auth_vector == NULL)
							 {
                    		   /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
		            		   rpsl_attr_delete_list(new_mntners);
                    		   return UP_AUF; /* auth failed */
                			 }
                			 auth_return = authorise(new_auth_vector, credentials, overriden);
	            			 free(new_auth_vector);
	            			 return auth_return;
                		   }
						   else
						   {
                			 return UP_HOF; /* hierarchical authorisation failed */
                		   }
            			 }
						 else
						 {/* exact_match_inetnum == NULL */
                		   /* then, we will try to find less spec inetnums */
                		   less_spec_inetnum_str = get_less_spec_inetnum(new_object);
                		   if (less_spec_inetnum_str != NULL)
						   {
	            			 less_spec_inetnum_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
							 code = rpsl_object_init(less_spec_inetnum_obj, less_spec_inetnum_str);
							 if (tracing)
							 {
    						   if ( rpsl_object_has_error(less_spec_inetnum_obj, RPSL_ERRLVL_ERROR) )
							   {
								 /* thre was an error during the parsing */
								 name = rpsl_object_get_class(less_spec_inetnum_obj);
								 if ( name )
								 {
								   attr = rpsl_object_get_attr(less_spec_inetnum_obj, name);
								   if ( attr )
								   {
		    						 value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
									 if ( value )
									 {
		    						   printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
									   free(value);
									 }
									 else
		    						   printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

									 rpsl_attr_delete_list(attr);
								   }
								 }
							   }
							 }

                			 less_spec_inetnum_mntners = get_mnt_routes(less_spec_inetnum_obj);
                			 less_spec_inetnum_mntners = g_list_concat(less_spec_inetnum_mntners, 
                                			get_mnt_lowers(less_spec_inetnum_obj));
                			 less_spec_inetnum_auth_vector = get_auth_vector(less_spec_inetnum_mntners);
							 rpsl_object_delete(less_spec_inetnum_obj);
							 free(less_spec_inetnum_obj);

                			 if (less_spec_inetnum_mntners != NULL && less_spec_inetnum_auth_vector == NULL)
							 {
                    		   /* then, the mntners in 'less_spec_inetnum_mntners' do not exist. Problem. */
		            		   rpsl_attr_delete_list(less_spec_inetnum_mntners);
                    		   return UP_AUF; /* auth failed */
                			 }
                			 if (authorise(less_spec_inetnum_auth_vector, credentials, overriden) == UP_AUTH_OK)
							 {
                    		   /* then, check mnt_bys of the route itself */
                    		   new_mntners = get_mntners(new_object);
                    		   new_auth_vector = get_auth_vector(new_mntners);
                    		   if (new_mntners != NULL && new_auth_vector == NULL)
							   {
                    			 /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
		            			 rpsl_attr_delete_list(new_mntners);
                    			 return UP_AUF; /* auth failed */
                    		   }
                    		   auth_return = authorise(new_auth_vector, credentials, overriden);
	                		   free(new_auth_vector);
	                		   return auth_return;
                			 }
							 else
							 {/* authorise(less_spec_inetnum_auth_vector, credentials, overriden) != UP_AUTH_OK */
                    		   return UP_HOF; /* hierarchical authorisation failed */
                			 }
                		   }
						   else
						   {/* less_spec_inetnum == NULL */
                			 /* now that we couldn't find any route or inetnum object
                    			to be used in authentication. So, only if the auth is
                    			overriden the object will be created. */
                			 if (overriden)
							 {
                    		   return UP_AUTH_OK; 
                			 }
							 else
							 {
                    		   return UP_HOF; /* hierarchical authorisation failed */
                			 }
                		   }
            			 }
            		   }
        			 }
        		   }
				   else
				   {/* ! aut_num_auth_OK */
        			 return UP_HOF; /* hierarchical auth failed */
        		   }
    			 }

    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_auth_vector' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { /* both are NULL, mustn't happen */
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }
			 }


			 /*  
    		  *  Handle the set objects ("as-set","rtr-set", "peering-set", "route-set" and "filter-set" types 
    		  */
			 else if (strcmp(type,"as-set")       == 0 || strcmp(type,"rtr-set")     == 0 ||
        			 strcmp(type,"peering-set")  == 0 || strcmp(type,"filter-set")  == 0 ||
        			 strcmp(type,"route-set")    == 0 )
			 {
    		   if ( new_object == NULL && old_object != NULL )
			   { /* the object is to be deleted */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_auth_vector' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 auth_return = authorise(old_auth_vector, credentials, overriden);
				 free(old_auth_vector);
				 return auth_return;
    		   }
			   else if ( new_object != NULL && old_object == NULL )
			   { /* the object is to be created */
        		  set_name = get_search_key(new_object, type);
    			 if (strstr(set_name,":") == NULL )
				 { /* if the name is _not_ hierarchical */
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_auth_vector' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 { /* the name is hierarchical */
        		   less_specific_object_str = get_less_specific_set(new_object, type);
        		   if (less_specific_object_str != NULL)
				   { /* such an object exists */
	    			 less_specific_obj = (rpsl_object_t *)malloc(sizeof(rpsl_object_t));
					 code = rpsl_object_init(less_specific_obj, less_specific_object_str);
					 if (tracing)
					 {
    				   if ( rpsl_object_has_error(less_specific_obj, RPSL_ERRLVL_ERROR) )
					   {
						 /* thre was an error during the parsing */
						 name = rpsl_object_get_class(less_specific_obj);
						 if ( name )
						 {
						   attr = rpsl_object_get_attr(less_specific_obj, name);
						   if ( attr )
						   {
		    				 value = rpsl_attr_get_clean_value( (rpsl_attr_t *)(attr->data) );
							 if ( value )
							 {
		    				   printf("TRACING: get_mnt_routes_from_list: error parsing object %s\n", value );
							   free(value);
							 }
							 else
		    				   printf("TRACING: get_mnt_routes_from_list: error parsing object\n");

							 rpsl_attr_delete_list(attr);
						   }
						 }
					   }
					 }

        			 less_specific_object_type = rpsl_object_get_class(less_specific_obj);

        			 if (strcmp(less_specific_object_type, "aut-num") == 0)
					 { /* if this is an aut-num object */
            		   less_specific_mnt_lowers = get_mnt_lowers(less_specific_obj);
            		   less_specific_auth_vector = get_auth_vector(less_specific_mnt_lowers);
            		   if (less_specific_mnt_lowers != NULL && less_specific_auth_vector == NULL)
					   {
            			 /* then, the mntners in 'less_specific_auth_vector' do not exist. Problem. */
		    			rpsl_attr_delete_list(less_specific_mnt_lowers);
            			return UP_AUF; /* auth failed */
            		   }
            		   if (less_specific_auth_vector != NULL)
					   {
            			 auth_return = authorise(less_specific_auth_vector, credentials, overriden);
	        			 free(less_specific_auth_vector);
	        			 return auth_return;
            		   }
					   else
					   { /* the less specific object doesn't contain any mnt-lower */
            			 less_specific_mntners = get_mntners(less_specific_obj);
            			 less_specific_auth_vector = get_auth_vector(less_specific_mntners);
            			 if (less_specific_mntners != NULL && less_specific_auth_vector == NULL)
						 {
                		   /* then, the mntners in 'less_specific_mntners' do not exist. Problem. */
		        		   rpsl_attr_delete_list(less_specific_mntners);
                		   return UP_AUF; /* auth failed */
            			 }
            			 if (less_specific_auth_vector != NULL)
						 {  /* less spec object has some mnt-by attribs, 
                                                        		  use them  */
                			 auth_return = authorise(less_specific_auth_vector, credentials, overriden);
	            			 free(less_specific_auth_vector);
	            			 return auth_return;
            			 }
						 else
						 { /* the less specific object doesn't contain any mnt-by either */
                		   if (overriden)
						   {
                			 return UP_AUTH_OK; 
                		   }
						   else
						   {
                			 return UP_HOF; /* hierarchical authorisation failed */
                		   }
            			 }
            		   }
        			 }
					 else
					 { /* this is _not_ an aut-num object*/
            		   less_specific_mntners = get_mntners(less_specific_obj);
            		   less_specific_auth_vector = get_auth_vector(less_specific_mntners);
            		   if (less_specific_mntners != NULL && less_specific_auth_vector == NULL)
					   {
            			 /* then, the mntners in 'less_specific_mntners' do not exist. Problem. */
		    			 rpsl_attr_delete_list(less_specific_mntners);
            			 return UP_AUF; /* auth failed */
            		   }
            		   if (less_specific_auth_vector != NULL )
					   { /* the set obj has some mnt-by attribs */
            			 auth_return = authorise(less_specific_auth_vector, credentials, overriden);
	        			 free(less_specific_auth_vector);
	        			 return auth_return;
            		   }
					   else
					   {
            			 if (overriden)
						 {
                		   return UP_AUTH_OK; 
            			 }
						 else
						 {
                		   return UP_HOF; /* hierarchical authorisation failed */
            			 }
            		   }
        			 }
        			 rpsl_object_delete(less_specific_obj);
        		   }
				   else
				   { /* we don't have a less specific of this set object in the DB  */
        			 return UP_HOF; /* hierarchical authorisation failed */
        		   }
    			 }
    		   }
			   else if ( new_object != NULL && old_object != NULL )
			   { /* this is an update */
    			 old_mntners = get_mntners(old_object);
    			 old_auth_vector = get_auth_vector(old_mntners);
    			 if (old_mntners != NULL && old_auth_vector == NULL)
				 {
        		   /* then, the mntners in 'old_auth_vector' do not exist. Problem. */
				   rpsl_attr_delete_list(old_mntners);
        		   return UP_AUF; /* auth failed */
    			 }
    			 if (old_auth_vector)
				 { /* if we have mntners in the old object, use them */
        		   auth_return = authorise(old_auth_vector, credentials, overriden);
	    		   free(old_auth_vector);
	    		   return auth_return;
    			 }
				 else
				 {
        		   new_mntners = get_mntners(new_object);
        		   new_auth_vector = get_auth_vector(new_mntners);
        		   if (new_mntners != NULL && new_auth_vector == NULL)
				   {
        			 /* then, the mntners in 'new_mntners' do not exist. Problem. */
					 rpsl_attr_delete_list(new_mntners);
        			 return UP_AUF; /* auth failed */
        		   }
        		   auth_return = authorise(new_auth_vector, credentials, overriden);
	    		   free(new_auth_vector);
	    		   return auth_return;
    			 }
    		   }
			   else
			   { /* both are NULL, mustn't happen */
        		   if (tracing)
				   {
        			 printf("TRACING: check_auth: internal error: Both pointers are NULL\n");
        		   }
        		   return UP_INT; /* internal error */
    		   }

			 }
			 else
			 { /* We exhausted all object classes. If we are here, then there is a problem */
    		   printf("check_auth: This type '%s' is unknown\n", type);
    		   return UP_NIY; /* not implemented yet */
			 }
			 return UP_AUF; /* if we come to this point, then auth failed */ 
		  }



		  /* Gets the old version of the given "arg" object, which is in char * format
			 and returns the old version again in char * format */

		  char * get_old_version(rpsl_object_t *object, char * arg)
		  {
    		  bool code = true;
    		  const char *type=NULL;
			  char *lctype = NULL;
			  char *primary_search_key = NULL, *search_string = NULL;
    		  char *result = NULL, *origin = NULL, *nic_hdl = NULL;

    		  type = rpsl_object_get_class(object);
			  lctype = strdup(type);
			  g_strdown(lctype);

    		  primary_search_key = get_search_key(object, lctype);
    		  if(tracing) 
			  {
    			printf("TRACING: type= %s\n", type);
    			printf("TRACING: primary_search_key= %s\n", primary_search_key);
    		  }

    		  /* if the object is a pn or a ro object, then get all pn/ro's with the same NIC hdl */
    		  if ( strcmp(lctype,"person") == 0 || strcmp(lctype,"role") == 0 )
			  {
    			/* prepare the search string */
    			search_string = (char *)malloc(strlen(primary_search_key) + strlen("-x -R -r -T")
                                        			+ strlen("person,role") + 2);
    			sprintf(search_string, "-x -R -r -Tperson,role %s", primary_search_key);
    		  }
			  else
			  {
    			/* prepare the search string */
    			search_string = (char *)malloc(strlen(primary_search_key) + strlen("-x -R -r -T")
                                        			+ strlen(lctype) + 2);
    			sprintf(search_string, "-x -R -r -T%s %s",lctype, primary_search_key);
    		  }

    		  result = send_and_get(query_host, query_port, search_string);
    		  if(tracing) 
			  {
    			printf("TRACING: send_and_get has returned");
    			printf("TRACING: send_and_get returned with search %s result %s", search_string, result);
    		  }
			  free(search_string);
			  free(primary_search_key);

    		  /* and here, we must filter the 'result' with NIC handle */
    		  if ( strcmp(lctype,"person") == 0 )
			  {
    			if(tracing) 
				{
        		  printf("TRACING: This is a person\n");
    			}
    			/* if this is a person, then we must filter out the persons with different
        		   nic-hdl attributes (since it is possible to have this NIC hdl in the name
        		   of a person object, and whois will return that object too) */
    			nic_hdl = get_search_key(object, "nic-hdl");
    			if(tracing) 
				{
        		  printf("TRACING: Got nic-hdl of person: %s\n", nic_hdl);
    			}
    			result = up_filter_out_diff_nichdls(result, nic_hdl);  
    			if(tracing) 
				{
        		  printf("TRACING: Filtered person\n");
    			}
				free(nic_hdl);
    		  }

    		  /* also, we must filter the 'result' with NIC handle for roles */
    		  if(strcmp(type,"role") == 0)
			  {
    			if(tracing) 
				{
        		  printf("TRACING: This is a role\n");
    			}
    			/* if this is a role, then we must filter out the roles with different
        		   nic-hdl attributes (since it is possible to have this NIC hdl in the name
        		   of a role object, and whois will return that object too) */
    			nic_hdl = get_search_key(object, "nic-hdl");
    			if(tracing) 
				{
        		  printf("TRACING: Got nic-hdl of role: %s\n", nic_hdl);
    			}
    			result = up_filter_out_diff_nichdls(result, nic_hdl);  
    			if(tracing) 
				{
        		  printf("TRACING: Filtered role\n");
    			}
				free(nic_hdl);
    		  }

    		  if(strcmp(type,"route") == 0)
			  {
    			if(tracing) 
				{
        		  printf("TRACING: This is a route\n");
    			}
    			/* if this is a route, then we must filter out the routes with different
        		   origin attributes */
    			origin = get_search_key(object, "origin");
    			if(tracing) 
				{
        		  printf("TRACING: Got origin of route: %s\n", origin);
    			}
    			result = up_filter_out_diff_origins(result, origin);  
    			if(tracing) 
				{
        		  printf("TRACING: Filtered routes\n");
    			}
				free(origin);
    		  }

    		  /* count the objects */
    		  if(count_objects(result) == 0)
			  {
    			result = NULL; /* we don't have such an object */
    		  }
			  else if(count_objects(result) == 1)
			  {
    			result = take_object(result);
    			if(tracing) 
				{
    			printf("TRACING: Take_object returned ***%s\n", result);
    			}
    		  }
			  else
			  { /* we have more than one objects, error! */
    			result = NULL;
    		  }

    		  return result;
		  }




		  /* Gets a credentials_struct whose 'from' field will be filled in and
			 the mail header. Finds the 'From:' line in the header and sets
			 the 'from' field to this line (all line, including the 'From:' string,
			 since some users have put regexps which match the whole line in their
			 'auth' attributes.) */
		  void process_mail_header(credentials_struct * credentials_ptr, char * arg)
		  {
			char * header = strdup(arg);
			char * temp = (char *)malloc(strlen(header));

			while (index(header, '\n') != NULL)
			{
    		  temp = strdup(header);
    		  temp[index(temp, '\n') - temp] = '\0';
    		  if (strstr(temp, "From:") == temp)
			  {
    			if (tracing)
				{
        		  printf("TRACING: process_mail_header: Assigning %s\n", temp);
    			}
    			credentials_ptr->from = strdup(temp);
    			free(temp);
    			return;
    		  }
    		  header = header + (index(header, '\n') - header + 1);
			}
			free(temp);
		  }



		  void up_string_pack(char *dest, const char *source)
		  {
			if(tracing) 
			{
    		  printf("TRACING: up_string_pack running\n");
			}

		  /*----------------------------------------------------------------------*\

		  *  Function to rewrite a line of text with only one blankspace between  *
		  *  each word.
		  *
		  \*----------------------------------------------------------------------*/
		  /*
		   * This while loop continues until the NULL character is copied into
		   * the destination string.  If a tab character is copied into the
		   * destination string, it is replaced with a blank-space character.
		   *
		   * Multiple blank-space and/or tab characters are skipped in the source
		   * string until any other character is found.
		   */

			while (1)
			{
    		  *dest = *source;

    		  if (*dest == '\t')
            		  (*dest = ' ');

    		  /* Exit if have copied the end of the string. */
    		  if (*dest == '\0')
            		  return;

		  /*
		  * If the source character was a blank-space or a tab, move to the next
		  * source character.  While the source character is a blank-space or a
		  * tab, move to the next character (i.e. ignore these characters).  When
		  * any other character is found in the source string, move to the next
		  * element of the destination string.
		  *
		  * Otherwise, simultaneously, move to the next elements of the destination
		  * and the source strings.
		  */

    		  if ( (*source == ' ') || (*source == '\t') )
    		  {
        		  ++source;
        		  while ( (*source == ' ') || (*source == '\t') )
                		  {
                		  ++source;
                		  }

        		  ++dest;
    		  }
    		  else
    		  {
        		  ++dest;
        		  ++source;
    		  }
			}
		  }


		  /* replaces the erase_str occurences with insert_str in str (which is a ptr to GString) */
		  char * UP_replace_strings(char * str, const char * erase_str, const char * insert_str)
		  {
			GString * g_str;  
			int pos;
			char * result_str;

			/* erase_str mustn't be NULL */
			assert(erase_str != NULL);

			/* if insert str is NULL, make it empty string */
			if(insert_str == NULL)
			{
    		  insert_str = strdup(""); 
			}

			g_str = g_string_new(str);

			/* replace erase_str with insert_str */
			while(strstr(g_str->str, erase_str) != NULL)
			{
    		  pos = strstr(g_str->str, erase_str) - g_str->str;
    		  g_str = g_string_erase(g_str, pos, strlen(erase_str));
    		  if(insert_str != NULL)
			  {
    			g_str = g_string_insert(g_str, pos, insert_str);
    		  }
			}

			/* save the result string */
			result_str = strdup(g_str->str);

			/* free the GString structure (TRUE means 'also free the char string') */
			g_string_free(g_str, TRUE);

			return result_str;
		  }



		  /* replaces the erase_str occurences with insert_str in g_str (which is a ptr to GString) */
		  GString * UP_replace_GStrings(GString * g_str, const char * erase_str, const char * insert_str)
		  {
			int pos;

			if (insert_str == NULL)
			{ /* then don't do anything */
    		  return g_str;
			}

			/* replace erase_str with insert_str */
			while (strstr(g_str->str, erase_str) != NULL)
			{
    		  pos = strstr(g_str->str, erase_str) - g_str->str;
    		  g_str = g_string_erase(g_str, pos, strlen(erase_str));
    		  g_str = g_string_insert(g_str, pos, insert_str);
			}
			return g_str;
		  }



		  /* looks if two objects are identical or not.
    		  Takes two objects, one as char *, the other as
			  a parsed object, and returns 1 if
    		  they are identical, returns 0 if not.

    		  Algorithm is very simple: All strings of tabs and 
    		  white spaces are collapsed into a single white space,
    		  and then the strings are compared (strcmp) */
		  int identical(const char * old_version, rpsl_object_t *object)
		  {
			char * arg1 = strdup(old_version);
			char * arg2 = NULL;
			rpsl_object_t *object2;
			int result = 0;
			char *temp1, *temp2; 
			char *temp;

			object2 = rpsl_object_copy(object);
			rpsl_object_remove_attr_name(object2, "delete", NULL);
			rpsl_object_remove_attr_name(object2, "override", NULL);
			arg2 = rpsl_object_get_text(object2);

			arg1 = g_strstrip(arg1);
			arg2 = g_strstrip(arg2);

			/* convert tabs to white spaces */
			arg1 = g_strdelimit(arg1, "\t", ' ');
			arg2 = g_strdelimit(arg2, "\t", ' ');

			temp1 = (char *)malloc(strlen(arg1) + 1); 
			temp2 = (char *)malloc(strlen(arg2) + 1);
			up_string_pack(temp1, arg1);
			up_string_pack(temp2, arg2);

			/* if there are still \r's at the end of strings, remove them */
			if((temp1[strlen(temp1) - 1]) == '\r')
			{
    		  temp1[strlen(temp1) - 1] = '\0';
			}
			if((temp2[strlen(temp2) - 1]) == '\r')
			{
    		  temp2[strlen(temp2) - 1] = '\0';
			}

			/* there may be white spaces at the end of the strings now, remove them */
			if((temp1[strlen(temp1) - 1]) == ' ')
			{
    		  temp1[strlen(temp1) - 1] = '\0';
			}
			if((temp2[strlen(temp2) - 1]) == ' ')
			{
    		  temp2[strlen(temp2) - 1] = '\0';
			}

			/* remove the white spaces just before the EOLs (since this is not taken care of by
    		   the up_string_pack func) */
			temp = UP_replace_strings(temp1, " \n", "\n");
			free(temp1);
			temp1 = temp;

			temp = UP_replace_strings(temp2, " \n", "\n");
			free(temp2);
			temp2 = temp;

			result = strcmp(temp1, temp2);
			if(tracing){
    		  printf("TRACING: identical: the objects are:\n[%s]\n[%s]\n", temp1, temp2);
    		  printf("TRACING: identical: the lengths are:\n[%i]\n[%i]\n", strlen(temp1), strlen(temp2));
			}
			free(arg1);
			free(arg2);
			free(temp1);
			free(temp2);
			if(result  == 0)
			{
    		  if(tracing) 
			  {
    			printf("TRACING: identical returning 1\n");
    		  }
    		  return 1;
			}
			else
			{
    		  if(tracing) 
			  {
    			printf("TRACING: identical returning 0\n");
    		  }
    		  return 0;
			}
		  }


		  /* constructs an initials string from a given name (for NIC hdl generation) */
		  char * find_initials(const char * person_role_name)
		  {
			 char * temp;
			 char * initials = NULL;
			 int len, i;
			 char ** vector;

			 temp = strdup(person_role_name);

			 vector = g_strsplit(temp, " ", 0);
			 for (i = 0; vector[i] != NULL && i < 4; i++)
			 {
    		   if ( (strlen(vector[i]) > 0 ) && isalpha(vector[i][0]) )
			   {
    			 if (initials == NULL)
				 {
        		   initials = (char *)malloc(2);
        		   initials[0] = vector[i][0]; 
				   initials[1] = '\0';
    			 }
				 else
				 {
        		   len = strlen(initials);
        		   initials = (char *)realloc(initials, len + 2 );
        		   initials[len] = vector[i][0];
        		   initials[len + 1] = '\0';
    			 }
    		   }
			 }
			 free(temp);
			 g_strfreev(vector);
			 return initials;
		  }




		  /*  Gets the letter combination to be used in the automatically
    		  generated NIc handle. It the letter combination is specified
    		  in the AUTO NIC handle, return that. If not, return NULL
    		  (in which case the initials of the name must be used) */
		  char * get_combination_from_autonic(const char * autonic)
		  {
			GString * temp;
			char * str = NULL;

			temp = g_string_new(autonic);
			temp = g_string_up(temp);
			temp = g_string_erase(temp, 0, strlen("AUTO-"));
			/* delete all digits from the beginning of the string */
			while (temp->len > 0 && ((temp->str)[0] >= '0' && (temp->str)[0] <= '9'))
			{
    		  temp = g_string_erase(temp, 0, 1);
			}

			if (temp->len < 2 )
			{
    		  g_string_free(temp, TRUE);
    		  return NULL;
			}
			else
			{
    		  str = temp->str;
    		  g_string_free(temp, FALSE);
    		  g_strup(str);
    		  if(strlen(str) > 4)
			  {
    			str[4] = '\0'; 
    		  }
    		  return str;
			}
		  }




		  /* Gets an object whose NIC hdl is an auto NIC handle and to be modified (to be sent to RIPupdate)
			 and  modifies the nic-hdl: attribute.
			 For example, "nic-hdl: AUTO-1" becomes "nic-hdl: HG*-RIPE . Also,
			 auto_nic is set to "AUTO-1"
			 auto_nic must be allocated enough memory before replace_AUTO_NIC_hdl called */
		  rpsl_object_t * replace_AUTO_NIC_hdl(rpsl_object_t *object, char * auto_nic_hdl)
		  {
			GList *nichdl_item;
			rpsl_object_t *object2 = NULL;
			rpsl_attr_t *attr;
			GList *class_attr;
			char * person_role_name = NULL;
			char * initials = NULL;
			char *value, *new_value = NULL;
			const char *type;
			int pos;

			nichdl_item = rpsl_object_get_attr(object, "nic-hdl"); /* list with one item only */

			value = rpsl_attr_get_clean_value((rpsl_attr_t *)(nichdl_item->data));
			g_strdown(value);
			if (strstr(value, "auto-") != NULL)
			{
    		  /* this attribute must be replaced with a new attribute containing a nic-hdl */
    		  strcpy(auto_nic_hdl, value);
    		  pos = rpsl_attr_get_ofs((rpsl_attr_t *)(nichdl_item->data));

    		  if (tracing)
			  {
    			printf("TRACING: auto_nic is [%s]\n", auto_nic_hdl);
    		  }

    		  /* if the letter combination is already specified, get it */
    		  initials = get_combination_from_autonic(auto_nic_hdl);
    		  /* if the letter combination is not in the AUTO nichdl, obtain it from the name */
    		  if(initials == NULL)
			  {
				type = rpsl_object_get_class(object);
				class_attr = rpsl_object_get_attr(object, type);
				person_role_name = rpsl_attr_get_clean_value((rpsl_attr_t *)(class_attr->data));
				rpsl_attr_delete_list(class_attr);
    			initials = find_initials(person_role_name);
				free(person_role_name);
    		  }
			  object2 = rpsl_object_copy(object);
    		  new_value = (char *)malloc(strlen(initials) + strlen(sources[0]) + 3);
			  strcpy(new_value, initials);
			  strcat(new_value, "*-");
			  strcat(new_value, sources[0]);
			  /* now copy original attribute, replace value, remove old attr and add replacement */
			  attr = rpsl_attr_copy((rpsl_attr_t *)(nichdl_item->data));
			  rpsl_attr_replace_value(attr, new_value);
			  free(new_value);
			  free(value);

			  /* remove the attribute with the auto- */
			  rpsl_object_remove_attr(object2, pos, NULL);

			  /* insert new attribute with nic-hdl */
			  rpsl_object_add_attr(object2, attr, pos, NULL);
			}
			rpsl_attr_delete_list(nichdl_item);

			return(object2);
		  }




		  /* replaces the refs to AUTO NIC hdls with the assigned one */

		  char * replace_refs_to_AUTO_NIC_hdl(rpsl_object_t *object, GHashTable * auto_nic_hash, char *arg)
		  {
			char * nic_hdl = NULL;
			char *attr_str = NULL;
			char *name;
			char *value;
			char *return_str;
			char *tempstr;
			rpsl_attr_t *attr;
			const GList * attr_list = NULL;
			const GList * list_item = NULL;
			int pos;

			if(tracing)
			{
    		  printf("TRACING: replace_refs_to_AUTO_NIC_hdl is running: arg:[%s]\n", arg ? arg : "NULL");
			}

			attr_list = rpsl_object_get_all_attr(object);

			for (list_item = attr_list; list_item != NULL; list_item = g_list_next(list_item ))
			{
			  name = strdup(rpsl_attr_get_name((rpsl_attr_t *)(list_item->data)));
			  g_strdown(name);
			  value = rpsl_attr_get_clean_value((rpsl_attr_t *)(list_item->data));
			  g_strdown(value);
			  pos = rpsl_attr_get_ofs((rpsl_attr_t *)(list_item->data));
  			  if (    strstr(name, "admin-c") == name
	    		   || strstr(name, "tech-c")  == name
	    		   || strstr(name, "zone-c")  == name
	    		   || strstr(name, "author")  == name )
			  {
				/* attr starts with admin-c, tech-c, zone-c or author */
				if ( strstr(value, "auto-") != NULL)
				{
        		  if(tracing)
				  {
					  printf("TRACING: replace_refs_to_AUTO_NIC_hdl: auto_nic is [%s]\n", value);
        		  }

        		  /* if we have this AUTO NIC hdl in the hash, put it in. */
        		  if( (nic_hdl = (char *)g_hash_table_lookup(auto_nic_hash, value)) )
				  {
					  /* create a new attribute with the auto nic handle */
					  attr = rpsl_attr_copy((rpsl_attr_t *)(list_item->data));
            		  rpsl_attr_replace_value(attr, nic_hdl);

					  /* remove the attribute with the auto- */
					  rpsl_object_remove_attr(object, pos, NULL);

					  /* insert new attribute with nic-hdl */
					  rpsl_object_add_attr(object, attr, pos, NULL);
        		  }
				  else
				  { /* else, return 0 immediately */
					  free(name);
					  free (value);
					  return NULL;
        		  }
				}
			  }

			  free(name);
			  free (value);
			}

			return_str =  rpsl_object_get_text(object);

			/* now, if we don't have a '\n' at the end of the return_str  string, we will
    		   add one, since RAToolSet parser cannot deal with objects without a '\n' at the end */
			if(return_str[strlen(return_str) - 1] != '\n')
			{
    		  /* so, add a '\n' */
    		  tempstr = (char *)malloc(strlen(return_str) + 2);
    		  sprintf(tempstr, "%s\n", return_str);
    		  free(return_str);
    		  return_str = tempstr;
			}

			if (tracing)
			{
    		  printf("TRACING: replace_refs_to_AUTO_NIC_hdl is returning,\nreturn_str=[%s]\n", return_str);
			}
			return return_str;
		  }




		  /* UP_put_assigned_NIC will replace the auto NIC handle of the object with its
			 assigned NIC handle and return an amended copy of the object */
		  rpsl_object_t * UP_put_assigned_NIC(rpsl_object_t *object, const char * assigned_NIC)
		  {
			rpsl_object_t *object2;
			rpsl_attr_t *attr;
			GList * nichdl_item;
			char *value;
			int pos;

			nichdl_item = rpsl_object_get_attr(object, "nic-hdl");  /* a list with only one item */

			value = rpsl_attr_get_clean_value((rpsl_attr_t *)(nichdl_item->data));
			g_strdown(value);
			if (strstr(value, "auto-") != NULL)
			{
    		  /* replace the AUTO-NIC hdl with the assigned one  */

    		  if (tracing)
    		  {
    			printf("TRACING: UP_put_assigned_NIC: auto_nic is [%s]\n", value);
    		  }

			  object2 = rpsl_object_copy(object);
			  /* now copy original attribute, replace value, remove old attr and add replacement */
			  attr = rpsl_attr_copy((rpsl_attr_t *)(nichdl_item->data));
			  rpsl_attr_replace_value(attr, assigned_NIC);
    		  pos = rpsl_attr_get_ofs((rpsl_attr_t *)(nichdl_item->data));

			  /* remove the attribute with the auto- */
			  rpsl_object_remove_attr(object2, pos, NULL);

			  /* insert new attribute with nic-hdl */
			  rpsl_object_add_attr(object2, attr, pos, NULL);
			}
			rpsl_attr_delete_list(nichdl_item);

			return object2;
		  }




		  /* Takes a parsed object, and returns 1 if this object has 
			 an AUTO NIC handle. Otherwise, returns 0 */
		  int has_AUTO_NIC_hdl(const rpsl_object_t * object)
		  {
			GList *attributes = NULL;

			if ( !rpsl_object_is_deleted(object) )
			{
    		  attributes = rpsl_object_get_attr(object, "nic-hdl");
    		  if (attributes != NULL)
			  {
    			if (strstr_in_attr_list(attributes, "AUTO-") == 1)
				{ /* if it contains a ref to AUTO nic */
        		  rpsl_attr_delete_list(attributes);
        		  return 1;
    			}
    		  }
    		  /* if control reaches here, then we will return 0 */
    		  rpsl_attr_delete_list(attributes);
    		  return 0; 
			}
			else
			{ /* it doesn't pass syntax check. So, it doesn't matter if 
        			 it contains refs to AUTO NIC hdls. */
    		  return 0;        
			}
		  }


		  /* Takes an rpsl_object_t structure , and returns 1 if this object contains
			 a reference to an AUTO NIC handle. Otherwise, returns 0 */
		  int has_ref_to_AUTO_nic_hdl(rpsl_object_t *object)
		  {
			GList * attributes = NULL;

			if (! rpsl_object_is_deleted(object) )
			{
    		  attributes = rpsl_object_get_attr(object, "admin-c");
    		  if (attributes != NULL)
			  {
    			if (strstr_in_attr_list(attributes, "AUTO-") == 1)
				{ /* if it contains a ref to AUTO nic */
        		  rpsl_attr_delete_list(attributes);
        		  return 1;
    			}
    		  }
    		  rpsl_attr_delete_list(attributes);
    		  attributes = rpsl_object_get_attr(object, "tech-c");
    		  if (attributes != NULL)
			  {
    			if (strstr_in_attr_list(attributes, "AUTO-") == 1)
				{ /* if it contains a ref to AUTO nic */
        		  rpsl_attr_delete_list(attributes);
        		  return 1;
    			}
    		  }

    		  rpsl_attr_delete_list(attributes);
    		  attributes = rpsl_object_get_attr(object, "zone-c");
    		  if (attributes != NULL)
			  {
    			if(strstr_in_attr_list(attributes, "AUTO-") == 1)
				{ /* if it contains a ref to AUTO nic */
        		  rpsl_attr_delete_list(attributes);
        		  return 1;
    			}
    		  }
    		  rpsl_attr_delete_list(attributes);
    		  attributes = rpsl_object_get_attr(object, "author");
    		  if (attributes != NULL)
			  {
    			if (strstr_in_attr_list(attributes, "AUTO-") == 1)
				{ /* if it contains a ref to AUTO nic */
        		  rpsl_attr_delete_list(attributes);
        		  return 1;
    			}
    		  }
    		  rpsl_attr_delete_list(attributes);
    		  /* if control reaches here, then we will return 0 */
    		  return 0; 
			}
			else
			{  /* it doesn't pass syntax check. So, it doesn't matter if 
        			 it contains refs to AUTO NIC hdls. */
    		  return 0;        
			}
		  }



		  /* Gets the "From" line of the incoming mail message and finds out an 
			 address to send the acknowledgement */
		  char * find_email_address(const char * from_line)
		  {
			char * pos1 = NULL, * pos2 = NULL, * pos = NULL;
			char * temp = NULL;
			char * part1 = NULL, * part2 = NULL;

			if (from_line == NULL)
			{
    		  return NULL;
			}
			if (strstr(from_line, "From:") != from_line)
			{
    		  temp = strdup(from_line);
			}
			else
			{
    		  temp = strdup(from_line + strlen("From:"));
			}
			g_strstrip(temp);
			if (index(temp, '<'))
			{ /* then the line is something like '"John White" <john@inter.net>' */
    		  pos1 = index(temp, '<');
    		  pos2 = index(temp, '>');
    		  temp = strncpy(temp, pos1 + 1, pos2 - pos1 -1);
    		  temp[pos2 - pos1 - 1] = '\0';
    		  if (tracing)
			  {
    		   printf("TRACING: find_email_address temp=[%s]\n", temp);
    		  }
			}

			/* and now, we have to remove the parts in parantheses */ 
			while (   index(temp, '(') != NULL && index(temp, ')') != NULL
        			&& index(temp, '(') < index(temp, ')') )
			{
    		  part1 = strdup(temp);
    		  /* terminate the string */
    		  pos = index(part1, '(');
    		  *pos = '\0';

    		  part2 = strdup(index(temp, ')') + 1);
    		  strcat(part1, part2);
    		  free(temp);
    		  temp = strdup(part1);
    		  free(part1);
    		  free(part2);
			}

			g_strstrip(temp); 
			return temp;
		  }  



		  /* removes the '\n's and '\r's at the end of the arg, and returns it  */
		  char * UP_remove_EOLs(char * arg)
		  {
			while ( strlen(arg) > 0 &&
        			(arg[strlen(arg) - 1] == '\n' || 
        			 arg[strlen(arg) - 1] == '\r') )
			{
    		  arg[strlen(arg) - 1] = '\0';
			}

			return arg;
		  }



		  /* Duplicates the given arg, and replaces 
    		  $FROM,
    		  $SUBJECT,
    		  $MDATE,
    		  $MSGID,
    		  $CC,
    		  $HUMAILBOX
    		  $AUTOBOX
    		  $FROMHOST

    		  and $TIME & $DATE

    		  strings with the corresponding variables.

		  */
		  char * UP_replace_globals(const char * arg)
		  {
			GString * g_str;
			int pos; 
			char * to_be_returned;
			time_t cur_time;
			char * temp, * time_str, * date_str;


			/* get time */
			cur_time = time(NULL);
			temp = strdup(ctime(&cur_time));
			/* temp is now something like "Fri Sep 13 00:00:00 1986\n\0", fields are const width */ 

			time_str = (char *)malloc(9);  
			time_str = strncpy(time_str, temp + 11, 8);
			time_str[8] = '\0';  

			date_str = (char *)malloc(16);
			date_str = strncpy(date_str, temp, 11);
			date_str[11] = '\0';
			date_str = strncat(date_str, temp + 20, 4);


			free(temp);

			g_str = g_string_new(arg);

			g_str = UP_replace_GStrings(g_str, "$TIME", time_str);

			g_str = UP_replace_GStrings(g_str, "$DATE", date_str);

			g_str = UP_replace_GStrings(g_str, "$SUBJECT", update_mail_subject);

			g_str = UP_replace_GStrings(g_str, "$FROM", update_mail_sender);

			g_str = UP_replace_GStrings(g_str, "$MDATE", update_mail_date); 

			g_str = UP_replace_GStrings(g_str, "$MSGID", update_mail_ID);

			if (update_mail_cc == NULL)
    		  g_str = UP_replace_GStrings(g_str, "$CC", ""); 
			else
    		  g_str = UP_replace_GStrings(g_str, "$CC", update_mail_cc);

			g_str = UP_replace_GStrings(g_str, "$HUMAILBOX", humailbox);

			g_str = UP_replace_GStrings(g_str, "$AUTOBOX", autobox);

			g_str = UP_replace_GStrings(g_str, "$FROMHOST", netupdclientIP); 

			free(time_str);
			free(date_str);

			to_be_returned = strdup(g_str->str); 
			g_string_free(g_str, 1); 
			return to_be_returned;
		  }




		  /* Adds the given file to the update log */
		  void UP_add_to_upd_log(const char * filename)
		  {
			time_t now;
			struct tm * tmstr;
			time_t cur_time;
			char * time_str;
			char datestr[10]; 
			char * updlogfile;
			FILE * infile, * log_file;
			char * buf;


			/* We need to get the a date string to construct the updlog file name */
			time(&now);
			tmstr = localtime(&now);
			strftime(datestr, 10, "%Y%m%d", tmstr);

			/* now that we have the date string, we can construct updlog file name */
			updlogfile = (char *)malloc(strlen(updlog) + strlen(datestr) + 2);
			snprintf(updlogfile, strlen(updlog) + strlen(datestr) + 2,
        			 "%s.%s", updlog, datestr);


			if (( infile = fopen(filename, "r")) == NULL)
			{
    		  fprintf(stderr, "UP_add_to_upd_log: Can't open upd file, %s\n", filename);
    		  return;
			}

			if (( log_file = fopen(updlogfile, "a")) == NULL)
			{
    		  fprintf(stderr, "UP_add_to_upd_log: Can't open upd log file, %s\n", updlogfile);
    		  return;
			}

			/* get time */
			cur_time = time(NULL);
			time_str = strdup(ctime(&cur_time));
			/* cut the '\n' at the end */
			time_str[strlen(time_str) - 1] = '\0';

			if (reading_from_mail)
			{
    		  fprintf(log_file, ">>> time: %s MAIL UPDATE <<<\n\n", time_str);
			}
			else if (networkupdate)
			{
    		  fprintf(log_file, ">>> time: %s NETWORKUPDATE UPDATE <<<\n\n", time_str);
			}
			else
			{
    		  fprintf(log_file, ">>> time: %s UPDATE <<<\n\n", time_str);
			}

			free(time_str);

			buf = (char *)malloc(1024);
			while ((buf=fgets(buf, 1023, infile)) > 0)
			{
    		  fprintf(log_file, "%s", buf);
			}
			free(buf);

			fclose(infile);
			fclose(log_file);
		  }



		  /* Logs the object to the update log */
		  void UP_log_networkupdate(const char * object_str, const char * host)
		  {
			time_t now;
			struct tm * tmstr;
			time_t cur_time;
			char * time_str;
			char datestr[10]; 
			char * updlogfile;
			FILE * log_file;
			char * buf;

			/* We need to get the a date string to construct the updlog file name */
			time(&now);
			tmstr = localtime(&now);
			strftime(datestr, 10, "%Y%m%d", tmstr);

			/* now that we have the date string, we can construct updlog file name */
			updlogfile = (char *)malloc(strlen(updlog) + strlen(datestr) + 2);
			snprintf(updlogfile, strlen(updlog) + strlen(datestr) + 2,
        			 "%s.%s", updlog, datestr);

			if (( log_file = fopen(updlogfile, "a")) == NULL)
			{
    		  fprintf(stderr, "UP_add_to_upd_log: Can't open upd log file, %s\n", updlogfile);
    		  return;
			}

			/* get time */
			cur_time = time(NULL);
			time_str = strdup(ctime(&cur_time));
			/* cut the '\n' at the end */
			time_str[strlen(time_str) - 1] = '\0';

			fprintf(log_file, ">>> time: %s NETWORKUPDATE UPDATE (%s) <<<\n\n", time_str, host);

			free(time_str);

			fprintf(log_file, "%s\n", object_str);

			fclose(log_file);
		  }




		  /* Performs a preliminary check on a string: Tries to guess if the arg is an object or not.
			 The criteria is: If we have a colon (":") in the first line of the string, then it is
			 probably an object */
		  int UP_is_object(const char * arg)
		  {
			 if (arg == NULL)
			 {
    		   return 0; /* not an object */
			 }

			 if (index(arg ,'\n'))
			 { /* does it consist of multiple lines? */
    		   if (index(arg ,':') != NULL  && (index(arg ,':') < index(arg ,'\n')))
			   {
    			 return 1;
    		   }
			   else
			   { /* it doesn't have any ":" or, first ":" is not in the first line */
    			 return 0;
    		   }
			 }
			 else
			 { /* it has a single line, possibly not an object */
    		   return 0;
			 }
		  }


		  /****************************************************************************************************/

		  /*******************  Redundant Functions ***********************************************************/



		  /* strips lines beginning with "override:" off  */
		  char * delete_override(char * arg){

    		  char ** temp = NULL;
    		  char * string = NULL;
    		  int i;

    		  if(arg == NULL){
    			 return NULL;
    		  }

    		  /* split the string into lines */
    		  temp = g_strsplit (arg, "\n", 0);

    		  for(i=0; temp[i] != NULL; i++){
    			/* if the line begins with "override:", then do not copy it */
    			if(strstr(temp[i], "override:") != temp[i]){
        		  if(string == NULL){
        			string = strdup(temp[i]);
        		  }else{
        			string = (char *)realloc(string, strlen(string) + strlen(temp[i]) + 2);
        			string = strcat(string, "\n");
        			string = strcat(string, temp[i]);
        		  }
    			}
    		  }
    		  g_strfreev(temp);
    		  return string;
		  }


		  /* takes a pre-parsed object, and returns its type */
		  /* char * get_class_type(Object *arg){

    		  char * be_returned = NULL;
    		  if(arg == NULL) return NULL;
    		  be_returned = strdup(arg->type->getName());  
    		  return g_strstrip(be_returned);
		  }
		  */



		  /*************** still used in nt module **************/
		  /* Get the type of the object, which is represented as a char * */
		  /* char * get_class_type_char(char * object){
			bool code;
			Object * o;
			char * type; 
			char * temp; 

			/* if there is no '\n' at the end of char * already, o->scan chokes. So, add it. 
			 (no harm in having more than one) */
		  /*  temp = (char *)malloc(strlen(object) + 2);
			sprintf(temp, "%s\n", object);

			if(tracing) {
    		  printf("TRACING: get_class_type_char is running, object is \n[%s]\n", object);
			}
			o = new Object;
			code = o->scan_silent(temp,strlen(temp));

			type = get_class_type(o);

			free(temp);
			delete(o);
			return type; 

		  }
		  */



		  /* Gets a preparsed object, its text and an attribute name. Returns a list of
			 attribute values */
		  /* GSList *get_attributes(Object * o, const char * attrib, const char * text){

			char * value = NULL;
			Attr *attr;
			GSList *list_of_attributes = NULL;


			for(attr = o->attrs.head(); attr; attr = o->attrs.next(attr)){
    		  value = (char*)malloc((*attr).len - strlen(attr->type->name()) - 1);
    		  strncpy(value, (char *)(text+attr->offset) + strlen(attr->type->name())+1,
        		  attr->len - strlen(attr->type->name()) -2 );
    		  value[attr->len - strlen(attr->type->name()) - 2 ] = '\0';
    		  if(strcmp(attr->type->name(), attrib) == 0){
    			if(tracing) {
        		  cout << "TRACING: get_attributes: adding " << g_strstrip(value) << endl;
    			}
    			list_of_attributes = g_slist_append(list_of_attributes, g_strstrip(value));
    		  }
			}


			return list_of_attributes; 
		  }
		  */

		  /* Gets a preparsed object, an attribute name. Returns the value of first occurence
			 of this attribute */
		  /*char *get_attribute(Object * o, const char * attrib, char * text){

			char * value = NULL;
			Attr *attr;

			if(tracing) {
    		  printf("TRACING: get_attributes is running\n");
			}

			for(attr = o->attrs.head(); attr; attr = o->attrs.next(attr)){
    		  value = (char*)malloc((*attr).len - strlen(attr->type->name()) - 1);
    		  strncpy(value, (char *)(text+attr->offset) + strlen(attr->type->name())+1,
        		  attr->len - strlen(attr->type->name()) -2 );
    		  value[attr->len - strlen(attr->type->name()) - 2 ] = '\0';
    		  if(strcmp(attr->type->name(), attrib) == 0){
    			if(tracing) {
        		  cout << "TRACING: get_attribute: will return " << value << endl;
    			}
    			return value;
    		  }else{
    			free(value);
    		  }
			}

			if(tracing) {
    		  printf("TRACING: get_attribute is returning\n");
			}

			return NULL; 
		  }
		  */

		  /*************** still used in nt module **************/
		  /* strips lines beginning with "delete:" off  */
		  char * delete_delete_attrib(char * arg){

    		  char ** temp = NULL;
    		  char * string = NULL;
    		  int i;

    		  if(arg == NULL){
    			 return NULL;
    		  }

    		  /* split the string into lines */
    		  temp = g_strsplit (arg, "\n", 0);

    		  for(i=0; temp[i] != NULL; i++){
    			/* if the line begins with "delete:", then do not copy it */
    			if(strstr(temp[i], "delete:") != temp[i]){
        		  if(string == NULL){
        			string = strdup(temp[i]);
        		  }else{
        			string = (char *)realloc(string, strlen(string) + strlen(temp[i]) + 2);
        			string = strcat(string, "\n");
        			string = strcat(string, temp[i]);
        		  }
    			}
    		  }
    		  g_strfreev(temp);
    		  return string;
		  }
notify:       denis@ripe.net
mnt-by:       RIPE-DBM-MNT
changed:      denis@ripe.net 20010717
source:       RIPE

$$


## ------------------------------------------------------------------------
