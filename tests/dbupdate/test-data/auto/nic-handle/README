# auto-nic tests

# CASE 1: Create a person object
#         with an AUTO-1 nic-hdl
%
% requires initial objects to be loaded
#
# create person object 
#
#SUCCESS
#
# RESULT 1: The creation will succeed


# CASE 2: Create a person object
#         with an auto-1 nic-hdl
%
% requires initial objects to be loaded
#
# create person object 
#
#SUCCESS
#
# RESULT 2: The creation will succeed


# CASE 3: Create 2 person objects
#         with an AUTO-3 and AUTO-1 nic-hdl
%
% requires initial objects to be loaded
#
# create 2 person objects 
#
#SUCCESS
#
# RESULT 3: The creations will succeed


# CASE 4: Create a person object
#         with an AUTO-1DW nic-hdl
%
% requires initial objects to be loaded
#
# create person object 
#
#SUCCESS
#
# RESULT 4: The creation will succeed


# CASE 5: Create a person object
#         with an AUTO-1FRED nic-hdl
%
% requires initial objects to be loaded
#
# create person object 
#
#SUCCESS
#
# RESULT 5: The creation will succeed


# CASE 6: Create a person object
#         with an AUTO-1DvW nic-hdl
%
% requires initial objects to be loaded
#
# create person object 
#
#SUCCESS
#
# RESULT 6: The creation will succeed


# CASE 7: Create 2 person objects
#         with an AUTO-1 and AUTO-1 nic-hdl
%
% requires initial objects to be loaded
#
# create 2 person objects 
#
#SUCCESS
#
# RESULT 7: The creations will succeed


# CASE 8: Create a person object
#         with an AUTO-1 nic-hdl
#         and create a role object
#         with a single reference to the AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 8: The creations will succeed


# CASE 9: Create a person object
#         with an AUTO-1 nic-hdl
#         and modify a role object
#         with a single reference to the AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and modify role objects
#
#SUCCESS
#
# RESULT 9: The creation and modification will succeed


# CASE 10: Create a person object
#          with an AUTO-1 nic-hdl
#          and create a role object
#          with two references to the AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 10: The creations will succeed


# CASE 11: Create two person objects
#          with AUTO-1 and AUTO-2 nic-hdls
#          and create a role object
#          with one references to each AUTO- nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 11: The creations will succeed


# CASE 12: Create two person objects
#          with AUTO-1 and AUTO-2 nic-hdls
#          and create a role object
#          with two references to each AUTO- nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 12: The creations will succeed


# CASE 13: Create two person objects
#          with AUTO-1 and AUTO-1 nic-hdls
#          and create a role object
#          with references to AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 13: The creations will succeed and the referencing nic-hdls
#            will take the created nic-hdl from the second AUTO-1


# CASE 14: Create two person objects
#          with AUTO-1 and AUTO-4 nic-hdls
#          and create a role object
#          with references to AUTO-1 and AUTO-4 nic-hdls
#          and contains an AUTO-3 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 14: The creations will succeed


# CASE 15: Create a role object
#          which contains an AUTO-1 nic-hdl.
#          there is already a TR2-DB-TEST in the db
#          but there is no TR1-DB-TEST in the db
%
% requires initial objects to be loaded
#
# create role object
#
#SUCCESS
#
# RESULT 15: The creation will succeed
#            and ripupd will re-use the nic-hdl TR1-DB-TEST


# CASE 16: Create a person object
#          with an AUTO-2 nic-hdl
#          and create a role object
#          with a single reference to a non-existent AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#FAILURE
#
# RESULT 16: The person creation will succeed
#            the role creation will fail


# CASE 17: Create a role object
#          with a single reference to a non-existent AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create role object
#
#FAILURE
#
# RESULT 17: The role creation will fail


# CASE 18: Create a self referencing role object
%
% requires initial objects to be loaded
#
# create role object
#
#FAILURE
#
# RESULT 18: The role creation will fail


# CASE 19: Create a person object
#          with an AUTO-1 nic-hdl
#          and create two role objects each
#          with two references to the AUTO-1 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 19: The creations will succeed


# CASE 20: Create two person objects
#          with AUTO-1 and AUTO-2 nic-hdls
#          and create two role objects each
#          with a reference to the AUTO-1 and AUTO-2 nic-hdl.
%
% requires initial objects to be loaded
#
# create person and role objects
#
#SUCCESS
#
# RESULT 20: The creations will succeed


# CASE 21: Create 2 role objects
#          which contains AUTO- nic-hdls
#          and reference each other.
%
% requires initial objects to be loaded
#
# create role object
#
#FAILURE
#
# RESULT 21: The creations will fail


# auto-nic tests
# CASE 22: Create a person object
#          which contains AUTO- nic-hdl
#          and a mnt-by with password.
%
#
# create person object
#
#SUCCESS
#
# RESULT 22: The creation will succeed


# CASE 23: Create a person object
#          which contains AUTO- nic-hdl
#          and a mnt-by with no password.
%
#
# create person object
#
#FAILURE
#
# RESULT 23: The creation will fail


# CASE 24: Create an inetnum object
#          with correct password for mnt-by of parent
#          and mnt-by of inetnum
#          with the admin-c: set to AUTO-1
#          and create the person with AUTO-1 nic-hdl with 
#          a mnt-by: and password
%
#
# create inetnum and person objects
#
#SUCCESS
#
# RESULT 24: The creations will succeed


# auto-nic tests
# CASE 25: Create an inetnum object
#          with correct password for mnt-by of parent
#          and mnt-by of inetnum
#          with the admin-c: set to AUTO-1
#          and create the person with AUTO-1 nic-hdl with 
#          a mnt-by: and no password
%
#
# create inetnum and person objects
#
#FAILURE
#
# RESULT 25: The creations will fail


