# ipv6 status tests
# CASE 1: create an inet6num with legacy SUBTLA status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 1: The creation will fail with syntax error


# CASE 2: create an inet6num with ALLOCATED-BY-LIR
# with less specific having a legacy status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 2: The creation will fail


# CASE 3: create an inet6num with ALLOCATED-BY-RIR
# with mnt-by: _NOT_ RIPE-NCC-HM-MNT
#
# create inet6num object 
#
#FAILURE
#
# RESULT 3: The creation will fail with Authorisation failure


# CASE 4: create an inet6num with ALLOCATED-BY-RIR
# with mnt-by: RIPE-NCC-HM-MNT
# and less specific has invalid status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 4: The creation will fail with Hierarchical Authorisation failure


# CASE 5: create an inet6num with ALLOCATED-BY-RIR
# with mnt-by: RIPE-NCC-HM-MNT
# and less specific has no status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 5: The creation will fail with Hierarchical Authorisation failure


# CASE 6: delete an inet6num object with invalid status
#
# delete inet6num object 
#
#SUCCESS
#
# RESULT 6: The deletion will succeed


# CASE 7: create an inet6num with ALLOCATED-BY-RIR
# with mnt-by: RIPE-NCC-HM-MNT
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 7: The creation will succeed


# CASE 8: create an inet6num with ALLOCATED-BY-LIR
# with less specific having ALLOCATED-BY-RIR status
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 8: The creation will succeed


# CASE 9: create an inet6num with ALLOCATED-BY-LIR
# with less specific having ALLOCATED-BY-LIR status
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 9: The creation will succeed


# CASE 10: change an inet6num from ALLOCATED-BY-LIR to ALLOCATED-BY-RIR 
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 10: The modify will fail


# CASE 11: create an inet6num with ASSIGNED 
# with less specific having ALLOCATED-BY-LIR status
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 11: The creation will succeed


# CASE 12: create an inet6num with ASSIGNED
# with less specific having ASSIGNED status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 12: The creation will fail 


# CASE 13: create an inet6num with ALLOCATED-BY-LIR
# with less specific having ASSIGNED status
#
# create inet6num object 
#
#FAILURE
#
# RESULT 13: The creation will fail with Hierarchical Authorisation failure


# CASE 14: change an inet6num from ALLOCATED-BY-LIR to ASSIGNED
# with more specifics existing
#
# update inet6num object 
#
#SUCCESS
#
# RESULT 14: The update will succeed


# CASE 15: change an inet6num from ASSIGNED to ALLOCATED-BY-LIR
#
# update inet6num object 
#
#SUCCESS
#
# RESULT 15: The update will succeed


# CASE 16:change an inet6num from ALLOCATED-BY-LIR to ASSIGNED 
# with no more specifics
#
# update inet6num object 
#
#SUCCESS
#
# RESULT 16: The update will succeed


# CASE 17: create an inet6num with ASSIGNED
# with less specific having ALLOCATED-BY-RIR status
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 17: The creation will succeed


# CASE 18: create an inet6num with ALLOCATED-BY-RIR
#          with mnt-by: RIPE-NCC-HM-MNT
#          no org: reference
#
# create inet6num object 
#
#FAILURE
#
# RESULT 18: The creation will fail


#############################################################
# AfriNic tests

# CASE 19: create an inet6num with SUB-ALLOCATED PA
#          no org: reference
#
# create inet6num object 
#
#FAILURE
#
# RESULT 19: The creation will fail
#rir AFRINIC


# CASE 20: create an inet6num with SUB-ALLOCATED PA
#          with org: reference
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 20: The creation will succeed
#rir AFRINIC


# CASE 21: create an inet6num with SUB-ALLOCATED PA
#          under SUB-ALLOCATED PA
#
# create inet6num object 
#
#FAILURE
#
# RESULT 21: The creation will fail
#rir AFRINIC


# CASE 22: create an inet6num with ASSIGNED PA
#          under SUB-ALLOCATED PA
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 22: The creation will succeed
#rir AFRINIC


# CASE 23: create an inet6num with ASSIGNED PA
#          under ASSIGNED PA
#
# create inet6num object 
#
#FAILURE
#
# RESULT 23: The creation will fail
#rir AFRINIC

# end of AfriNIC tests
#############################################################


# CASE 24: create an inet6num with ASSIGNED ANYCAST
#          with mnt-by: _NOT_ RIPE-NCC-HM-MNT
#
# create inet6num object 
#
#FAILURE
#
# RESULT 24: The creation will fail with Authorisation failure


# CASE 25: create an inet6num with ASSIGNED ANYCAST
#          with mnt-by: RIPE-NCC-HM-MNT
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 25: The creation will succeed


# CASE 26: modify an inet6num with status ASSIGNED ANYCAST
#          change status to ASSIGNED
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 26: The modification will fail


# CASE 27: modify an inet6num with status ASSIGNED
#          change status to ASSIGNED ANYCAST
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 27: The modification will fail


# CASE 28: modify an inet6num with status ASSIGNED ANYCAST
#          change some other attribute
#
# modify inet6num object 
#
#SUCCESS
#
# RESULT 28: The modification will succeed


# CASE 29: delete an inet6num with status ASSIGNED ANYCAST
#
# delete inet6num object 
#
#SUCCESS
#
# RESULT 29: The deletion will succeed


# CASE 30: create an inet6num with status ASSIGNED ANYCAST
#          with parent status ALLOCATED-BY-LIR
#
# create inet6num object 
#
#FAILURE
#
# RESULT 30: The creation will fail


# old (missing) CASE 31: create an inet6num with status ASSIGNED
#          with parent status ASSIGNED ANYCAST
#
# create inet6num object 
#
#FAILURE
#
# old (missing) RESULT 31: The creation will fail


# CASE 32: create an inet6num with status ASSIGNED
#          with parent status ASSIGNED ANYCAST
#          (should have been Case 31 to follow the sequence)
#
# create inet6num object 
#
#FAILURE
#
# RESULT 32: The creation will fail


# CASE 31: create an inet6num with ASSIGNED PI
# with less specific having ALLOCATED-BY-RIR status
#
# create inet6num object 
#
#SUCCESS
#
# RESULT 31: The creation will succeed


# CASE 33: create an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          not mnt-by hostmaster mnt
#
# create inet6num object 
#
#FAILURE
#
# RESULT 33: The creation will fail


 CASE 34: create an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          no org password
#
# create inet6num object 
#
#FAILURE
#
# RESULT 34: The creation will fail


# CASE 35
# create an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          no org reference
#
# create inet6num object 
#
#FAILURE
#
# RESULT 35: The creation will fail


# CASE 36: create an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-LIR
#
# create inet6num object 
#
#FAILURE
#
# RESULT 36: The creation will fail


# CASE 37: create an inet6num with status ASSIGNED PI
#          with parent status ASSIGNED
#
# create inet6num object 
#
#FAILURE
#
# RESULT 37: The creation will fail


# CASE 38: create an inet6num with status ASSIGNED PI
#          with parent status ASSIGNED ANYCAST
#
# create inet6num object 
#
#FAILURE
#
# RESULT 38: The creation will fail


# CASE 39: create an inet6num with status ASSIGNED PI
#          with parent status ASSIGNED PI
#
# create inet6num object 
#
#FAILURE
#
# RESULT 39: The creation will fail


# CASE 40: modify an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          to status ASSIGNED ANYCAST
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 40: The modify will fail


# CASE 41: modify an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          to status ASSIGNED
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 41: The modify will fail


# CASE 42: modify an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          to status ALLOCATED-BY-LIR
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 42: The modify will fail


# CASE 43: modify an inet6num with status ASSIGNED PI
#          with parent status ALLOCATED-BY-RIR
#          to status ALLOCATED-BY-RIR
#
# modify inet6num object 
#
#FAILURE
#
# RESULT 43: The modify will fail


# CASE 44: modify an inet6num with ASSIGNED PI
#          with less specific having ALLOCATED-BY-RIR status
#          no change to status
#
# modify inet6num object 
#
#SUCCESS
#
# RESULT 44: The modify will succeed


# CASE 46: delete an inet6num with ASSIGNED PI
#          with less specific having ALLOCATED-BY-RIR status
#
# delete inet6num object 
#
#SUCCESS
#
# RESULT 46: The deletion will succeed


