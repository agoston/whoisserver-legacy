#!@SHELL@

# figure out the appropriate flags for Java execution
@JAVA@ 2>&1 | grep classic > /dev/null
if [ $? -eq 0 ]; then
  JAVA="@JAVA@ -cp @abs_top_srcdir@/src/defs:@abs_top_builddir@/src/defs:. -classic"
else
  JAVA="@JAVA@ -cp @abs_top_srcdir@/src/defs:@abs_top_builddir@/src/defs:."
fi

# put our library in the class path
CLASSPATH=xalan/xerces.jar:.:@abs_top_builddir@/src/defs
export CLASSPATH

# produce a single def file
makedef() {
  echo "Making $2 $3"
  OPWD=`pwd`
  cd @abs_top_srcdir@/src/defs
  echo $JAVA Defs $1 $3 \> @abs_top_builddir@/src/include/$2
  $JAVA Defs $1 $3 > @abs_top_builddir@/src/include/$2
  JAVA_EXIT_CODE=$?
  if [ $JAVA_EXIT_CODE -ne 0 ]; then exit $JAVA_EXIT_CODE; fi
  echo "done"
  cd $OPWD
} # makedefs()

# copy files
for file in @abs_top_srcdir@/src/defs/*.xml
do
  if test ! -f `basename $file`
  then
    echo "Copying $file"
    cp -f $file .
  else
    echo "$file exists, not copying"
  fi
done

# create *.def files
makedef 14 QI_queries.def normalize
makedef 15 UD_queries.def normalize
makedef  1 DF_attribute_aliases.def
makedef  2 DF_attribute_aliases_map.def
makedef  3 DF_attribute_codes.def
makedef  4 DF_attribute_enum.def
makedef  5 DF_attribute_inv_attr_mask.def
makedef  6 DF_attribute_names.def
makedef  7 DF_class_aliases.def
makedef  8 DF_class_aliases_map.def
makedef  9 DF_class_codes.def
makedef 10 DF_class_dbase_code_map.def
makedef 11 DF_class_enum.def
makedef 12 DF_class_mask.def
makedef 13 DF_class_names.def
makedef 16 DF_class_templates.def
makedef 17 DF_class_templates_v.def
makedef 18 Diagrams.def
makedef 21 DF_radix_load.def
makedef 24 UD_comrol.def

# create header and tab files
$JAVA RPSLSyntax                    # produce syntax_tab.h & Makefile.syntax
$JAVA Defs 22 > attribute_tab.h     # produce attribute_tab.h
$JAVA Defs 23 > class_tab.h         # produce class_tab.h

